---
type: "custom:layout-card"
layout_type: "custom:grid-layout"
layout:
  # Tablet portrait
  grid-template-columns: "1fr 1fr 1fr 1fr 1fr 1fr"
  grid-template-areas: |
    "welcome welcome welcome welcome welcome welcome"
    "person person person person person person"
    "title1 title1 travel1 travel1 travel1 travel1"
    "card1 card1 card2 card2 card3 card3"
    "card4 card4 card5 card5 card6 card6"
  mediaquery:
    # Tablet
    "(max-width: 1280px)":
      grid-template-columns: "1fr 1fr 1fr 1fr 1fr 1fr"
      grid-template-rows: "1fr 0.5fr 0.1fr 0.1fr 0.1fr"
      grid-template-areas: |
        "welcome welcome welcome welcome welcome welcome"
        "person person person person person person"
        "title1 title1 travel1 travel1 travel1 travel1"
        "card1 card1 card2 card2 card3 card3"
        "card4 card4 card5 card5 card6 card6"

view_layout:
  grid-area: "main"
cards:
  ### TOPBAR ###
  - view_layout:
      grid-area: "welcome"
    type: horizontal-stack
    flex-grow: 2
    style: |
      ha-card {
        box-shadow: none;
        border-style: hidden;
        border-bottom-right-radius: 0px;
        border-bottom-left-radius: 0px;
      }
    cards:
    - type: vertical-stack
      cards:
      - type: markdown
        style:
          .: |
            ha-card {
                background-color: rgba(0,0,0,0) !important;
                box-shadow: none;
                padding: 1px;
            }
          ha-markdown:
            $: |
              ha-markdown-element:first-of-type h2 {
                background-color: rgba(0,0,0,0);
                color: var(--primary-color);
                font-size: 18px;
                line-height: 18px;
              }
              ha-markdown-element:first-of-type h3 {
                background-color: rgba(0,0,0,0);
                font-weight: normal;
                color: var(--primary-text-color);
                font-size: 12px;
                line-height: 12px;
              }
              ha-markdown-element:second-of-type h3 {
                background-color: rgba(0,0,0,0);
                color: var(--primary-text-color);
                font-weight: normal;
                font-size: 12px;
                line-height: 12px;
              }
        content: |
            ## Good {{ states('sensor.time_of_day') }}
            ### Today will be {{ states('sensor.open_weather_temperature')|round(1)|replace('.0','' ) }}Â°C <br/> {{ states('sensor.open_weather_forecast_precipitation_probability') }} % chance of Rain today
      - type: markdown
        style: 
          .: |
            ha-card {
              background-color:
                {% if states('sensor.living_room_temperature') >= ('sensor.open_weather_temperature')%}
                  rgba(var(--color-blue), 0.3)
                {% else %}
                  rgba(var(--color-red), 0.3)
                {% endif %}
                  ;
              color: var(--primary-text-color);
              font-weight: normal;
              font-size: 12px;
              line-height: 10px;
              text-align: center;
              justify-content: center;
              padding: 4px;
            }
        content: |
            {% if states('sensor.living_room_temperature') >= ('sensor.open_weather_temperature') %}
              ## <ha-icon icon="mdi:snowflake"></ha-icon><br>It's warmer outside than inside <br> Close windows and turn on fans
            {% else %}
              ### <ha-icon icon="mdi:weather-sunny"></ha-icon><br>It's cooler outside than inside <br> Open windows and turn on the fans
            {% endif %}

    - type: weather-forecast
      entity: weather.weather
      tap_action:
        action: fire-dom-event
        browser_mod:
          service: browser_mod.popup
          data:
            size: fullscreen
            content:
              type: "custom:button-card"
              template: "popup_weather_forecast"
              entity: weather.weather

  ### PERSON CARDS ###
  - view_layout: 
      grid-area: "person"
    type: horizontal-stack
    cards:
      - type: "custom:decluttering-card" # Sam Person Card & Pop-Up
        template: person_card_new
        variables:
          - entity: person.sam
          - name: Sam
          - battery: sensor.iphone_battery_level
          - battery_state: sensor.iphone_battery_state
          - work_sensor: sensor.sam_to_work
          - home_sensor: sensor.sam_to_home
          - work_icon: mdi:car
          - entity_picture: /local/avatar_sam.png
          - show_entity_picture: true
          - tap_action:
              action: fire-dom-event
              browser_mod:
                service: browser_mod.popup
                data:
                  title: "Sam"
                  style:
                    $: >
                      [[[
                        if (hass.themes.theme.includes("desktop")){
                          var dialog = `
                            .mdc-dialog__surface{
                              border-radius: var(--border-radius) !important;
                            }
                          `;
                        } else{
                          var dialog = "";
                        }
                        return `
                          *{
                            --secondary-background-color: none !important;
                          }
                          ${dialog}
                        `;
                      ]]]
                    hui-vertical-stack-card:
                      $: >
                        button-card {
                          align-self: center;
                          padding: 0.2em 0 2.3em 0;
                        }
                        hui-entities-card{
                          padding: 0.8em 1.4em;
                        }
                      $hui-entities-card$: >
                        ha-card{
                          box-shadow: none;
                        }
                      $hui-history-graph-card$: >
                        .content {
                          padding: 0 2.4em !important;
                        }
                        ha-card{
                          box-shadow: none;
                        }
                      $hui-glance-card$: >
                        ha-card{
                          box-shadow: none;
                        }
                      $hui-map-card:
                        $: >
                          ha-icon-button {
                            color: rgba(var(--color-blue),1);
                          }
                        $ha-map:
                          $: >
                            .leaflet-control-attribution {
                              display: none;
                            }
                            .leaflet-touch .leaflet-control-layers, .leaflet-touch .leaflet-bar {
                              border: 2px solid rgba(var(--color-blue),0.4) !important;
                            }
                            .leaflet-bar a {
                              background-color: rgba(var(--color-blue),0.2) !important;
                              color: rgba(var(--color-blue),1) !important;
                            }
                            .leaflet-bar a:first-child {
                              border-bottom: 2px solid rgba(var(--color-blue),0.4) !important;
                            }
                            .leaflet-pane.leaflet-tile-pane {
                              filter: contrast(95%);
                            }
                  content:
                    type: "vertical-stack"
                    cards:
                      - type: "entities"
                        entities:
                          - entity: person.sam
                            secondary_info: "last-changed"
                      - type: "history-graph"
                        entities:
                          - entity: person.sam
                      - type: "glance"
                        show_state: false
                        entities:
                          - entity: sensor.iphone_connection_type
                            name: "WiFi"
                            icon: "mdi:wifi"
                          - entity: person.sam
                            name: "GPS"
                            icon: "mdi:map-marker"
                      - type: "custom:button-card"
                        template:
                          - "find_my_phone_button"
                        entity: script.find_my_phone_sam
                      - type: "map"
                        aspect_ratio: "12x10"
                        default_zoom: 16
                        entities:
                          - person.sam
                          - person.leah
                          - zone.home

      - type: "custom:decluttering-card" # Leah Person Card & Pop-Up
        template: person_card_new
        variables:
          - entity: person.leah
          - name: Leah
          - battery: sensor.leah_s_iphone_battery_level
          - battery_state: sensor.leah_s_iphone_battery_state
          - work_sensor: sensor.leah_to_work
          - home_sensor: sensor.leah_to_home
          - work_icon: mdi:train
          - entity_picture: /local/avatar_leah.png
          - show_entity_picture: true
          - tap_action:
              action: fire-dom-event
              browser_mod:
                service: browser_mod.popup
                data:
                  title: "Leah"
                  style:
                    $: >
                      [[[
                        if (hass.themes.theme.includes("desktop")){
                          var dialog = `
                            .mdc-dialog__surface{
                              border-radius: var(--border-radius) !important;
                            }
                          `;
                        } else{
                          var dialog = "";
                        }
                        return `
                          *{
                            --secondary-background-color: none !important;
                          }
                          ${dialog}
                        `;
                      ]]]
                    hui-vertical-stack-card:
                      $: >
                        button-card {
                          align-self: center;
                          padding: 0.2em 0 2.3em 0;
                        }
                        hui-entities-card{
                          padding: 0.8em 1.4em;
                        }
                      $hui-entities-card$: >
                        ha-card{
                          box-shadow: none;
                        }
                      $hui-history-graph-card$: >
                        .content {
                          padding: 0 2.4em !important;
                        }
                        ha-card{
                          box-shadow: none;
                        }
                      $hui-glance-card$: >
                        ha-card{
                          box-shadow: none;
                        }
                      $hui-map-card:
                        $: >
                          ha-icon-button {
                            color: rgba(var(--color-blue),1);
                          }
                        $ha-map:
                          $: >
                            .leaflet-control-attribution {
                              display: none;
                            }
                            .leaflet-touch .leaflet-control-layers, .leaflet-touch .leaflet-bar {
                              border: 2px solid rgba(var(--color-blue),0.4) !important;
                            }
                            .leaflet-bar a {
                              background-color: rgba(var(--color-blue),0.2) !important;
                              color: rgba(var(--color-blue),1) !important;
                            }
                            .leaflet-bar a:first-child {
                              border-bottom: 2px solid rgba(var(--color-blue),0.4) !important;
                            }
                            .leaflet-pane.leaflet-tile-pane {
                              filter: contrast(95%);
                            }
                  content:
                    type: "vertical-stack"
                    cards:
                      - type: "entities"
                        entities:
                          - entity: person.leah
                            secondary_info: "last-changed"
                      - type: "history-graph"
                        entities:
                          - entity: person.leah
                      - type: "glance"
                        show_state: false
                        entities:
                          - entity: sensor.leah_s_iphone_ssid
                            name: "WiFi"
                            icon: "mdi:wifi"
                          - entity: person.leah
                            name: "GPS"
                            icon: "mdi:map-marker"
                      - type: "custom:button-card"
                        template:
                          - "find_my_phone_button"
                        entity: script.find_my_phone_leah
                      - type: "map"
                        aspect_ratio: "12x10"
                        default_zoom: 16
                        entities:
                          - person.leah
                          - person.sam
                          - zone.home

  ### TRAVEL CARDS ###
  - view_layout:
      grid-area: "travel1"
    type: horizontal-stack
    cards:
      - type: 'custom:button-card'
        template: card_generic_travel
        entity: sensor.london_tfl_jubilee_city
      - type: 'custom:button-card'
        template: card_travel_map
        entity: sensor.sam_to_work
        name: Local Traffic

  ### ROOM CARDS ###
  - view_layout:
      grid-area: "title1"
    type: "custom:button-card"
    template: "card_title"
    name: "Rooms"
  ### HALL ###
  - view_layout:
      grid-area: "card1"
    type: "custom:button-card"
    template:
      - card_esh_room_hall
      - blue_on
    name: Hall
    entity: light.all_hall_lights
    icon: mdi:door-open
    tap_action:
      action: navigate
      navigation_path: "hall"
    variables:
      ulm_custom_card_esh_room_light_entity: light.all_hall_lights
      ulm_custom_card_esh_room_climate_entity: light.hall_tablet_screen
    label: >
      [[[
        return "ð¡ï¸ " + states[ 'sensor.living_room_temperature'].state + "Â°C"
      ]]]
  ### LIVING ROOM ###
  - view_layout:
      grid-area: "card2"
    type: "custom:button-card"
    template:
      - card_esh_room_lr
      - blue_on
    name: Living Room
    entity: light.all_living_room_lights
    icon: mdi:sofa
    tap_action:
      action: navigate
      navigation_path: "living-room"
    variables:
      ulm_custom_card_esh_room_light_entity: light.all_living_room_lights
      ulm_custom_card_esh_room_climate_entity: light.hall_tablet_screen
    label: >
      [[[
        return "ð¡ï¸ " + states[ 'sensor.living_room_temperature'].state + "Â°C"
      ]]]
  ### KITCHEN ###
  - view_layout:
      grid-area: "card3"
    type: "custom:button-card"
    template:
      - card_esh_room_k
      - blue_on
    name: Kitchen
    entity: light.all_kitchen_lights
    icon: mdi:chef-hat
    tap_action:
      action: navigate
      navigation_path: "kitchen"
    variables:
      ulm_custom_card_esh_room_light_entity: light.all_kitchen_lights
      ulm_custom_card_esh_room_climate_entity: light.hall_tablet_screen
    label: >
      [[[
        return "ð¡ï¸ " + states[ 'sensor.kitchen_temperature'].state + "Â°C"
      ]]]
  ### BEDROOM ###
  - view_layout:
      grid-area: "card4"
    type: "custom:button-card"
    template:
      - card_esh_room_bed
      - blue_on
    name: Bedroom
    entity: light.all_bedroom_lights
    icon: mdi:bed-double
    tap_action:
      action: navigate
      navigation_path: "bedroom"
    variables:
      ulm_custom_card_esh_room_light_entity: light.all_bedroom_lights
      ulm_custom_card_esh_room_climate_entity: light.hall_tablet_screen
    label: >
      [[[
        return "ð¡ï¸ " + states[ 'sensor.bedroom_temperature'].state + "Â°C"
      ]]]
  ### BATHROOM ###
  - view_layout:
      grid-area: "card5"
    type: "custom:button-card"
    template:
      - card_esh_room_bath
      - blue_on
    name: Bathroom
    entity: light.all_bathroom_lights
    icon: mdi:bathtub
    tap_action:
      action: navigate
      navigation_path: "bathroom"
    variables:
      ulm_custom_card_esh_room_light_entity: light.all_bathroom_lights
      ulm_custom_card_esh_room_climate_entity: light.hall_tablet_screen
    label: >
      [[[
        return "ð¡ï¸ " + states[ 'sensor.bathroom_temperature'].state + "Â°C"
      ]]]
  ### OFFICE ###
  - view_layout:
      grid-area: "card6"
    type: "custom:button-card"
    template:
      - card_esh_room_off
      - blue_on
    name: Office
    entity: light.all_office_lights
    icon: mdi:desk
    tap_action:
      action: navigate
      navigation_path: "office"
    variables:
      ulm_custom_card_esh_room_light_entity: light.all_office_lights
      ulm_custom_card_esh_room_climate_entity: light.hall_tablet_screen
    label: >
      [[[
        return "ð¡ï¸ " + states[ 'sensor.living_room_temperature'].state + "Â°C"
      ]]]