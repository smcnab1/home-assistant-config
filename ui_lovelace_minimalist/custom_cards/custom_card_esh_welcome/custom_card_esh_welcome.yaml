---
card_esh_welcome:
  variables:
    ulm_weather: "[[[ return variables.ulm_weather]]]"
    ulm_chip_icon_state_entity: "[[[ return variables.ulm_chip_icon_state_entity ]]]"
    ulm_chip_double_state_entity1: "[[[ return variables.ulm_chip_double_state_entity1; ]]]"
    ulm_chip_double_state_entity2: "[[[ return variables.ulm_chip_double_state_entity2; ]]]"
    entity_1:
      entity_id:
      icon: "[[[ return entity.attributes.icon ]]]"
      name: "[[[ return entity.attributes.friendly_name ]]]"
      color: >
        [[[
          var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink'];
          var color = colors[Math.floor(Math.random() * colors.length)];
          return color;
        ]]]
    entity_2:
      entity_id:
      icon: "[[[ return entity.attributes.icon  ]]]"
      name: "[[[ return entity.attributes.friendly_name ]]]"
      color: >
        [[[
          var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink'];
          var color = colors[Math.floor(Math.random() * colors.length)];
          return color;
        ]]]
    entity_3:
      entity_id:
      icon: "[[[ return entity.attributes.icon  ]]]"
      name: "[[[ return entity.attributes.friendly_name ]]]"
      color: >
        [[[
          var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink'];
          var color = colors[Math.floor(Math.random() * colors.length)];
          return color;
        ]]]
    entity_4:
      entity_id:
      icon: "[[[ return entity.attributes.icon  ]]]"
      name: "[[[ return entity.attributes.friendly_name ]]]"
      color: >
        [[[
          var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink'];
          var color = colors[Math.floor(Math.random() * colors.length)];
          return color;
        ]]]
    entity_5:
      entity_id:
      icon: "[[[ return entity.attributes.icon  ]]]"
      name: "[[[ return entity.attributes.friendly_name ]]]"
      color: >
        [[[
          var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink'];
          var color = colors[Math.floor(Math.random() * colors.length)];
          return color;
        ]]]
  template:
    - "ulm_language_variables"
  show_icon: false
  show_name: false
  show_label: true
  styles:
    grid:
      - grid-template-areas: >
          [[[
            if(variables.ulm_card_esh_welcome_collapse && states[variables.ulm_card_esh_welcome_collapse].state == 'on'){
              return "\'item1\' \'item2\'";
            } else {
              return "\'item1\' \'item2\' \'item3\' \'item4\' \'item5\'";
            }
          ]]]
      - grid-template-columns: "1fr"
      - grid-template-rows: "min-content min-content"
      - row-gap: "0px"
    card:
      - border-radius: "var(--border-radius)"
      - box-shadow: "var(--box-shadow)"
      - padding: "10px"
    custom_fields:
      item3:
        - display: >
            [[[
              if(variables.ulm_card_esh_welcome_collapse && states[variables.ulm_card_esh_welcome_collapse].state == 'on'){
                return "none";
              } else {
                return "block";
              }
            ]]]
      item4:
        - display: >
            [[[
              if(variables.ulm_card_esh_welcome_collapse && states[variables.ulm_card_esh_welcome_collapse].state == 'on'){
                return "none";
              } else {
                return "block";
              }
            ]]]
      item5:
        - display: >
            [[[
              if(variables.ulm_card_esh_welcome_collapse && states[variables.ulm_card_esh_welcome_collapse].state == 'on'){
                return "none";
              } else {
                return "block";
              }
            ]]]
  custom_fields:
    item1:
      card:
        type: "custom:button-card"
        template: "card_esh_welcome_topbar"
        variables:
          ulm_card_esh_welcome_collapse: "[[[ return variables.ulm_card_esh_welcome_collapse ]]]"
          ulm_weather: "[[[ return variables.ulm_weather]]]"
          ulm_chip_icon_state_entity: "[[[ return variables.ulm_chip_icon_state_entity ]]]"
          ulm_chip_double_state_entity1: "[[[ return variables.ulm_chip_double_state_entity1; ]]]"
          ulm_chip_double_state_entity2: "[[[ return variables.ulm_chip_double_state_entity2; ]]]"
        styles:
          card:
            - border-radius: "none"
            - box-shadow: "none"
            - padding: "4px"
            - margin-left: "relative"
    item2:
      card:
        type: "custom:button-card"
        show_icon: false
        show_label: false
        show_name: true
        show_entity_picture: false
        name: |
          [[[
            var today = new Date();
            var time = today.getHours()
            let welcome = '';
            if (time >= '18'){
              welcome = variables.ulm_evening;
            } else if (time >= '12'){
              welcome = variables.ulm_afternoon;
            } else if (time >= '5'){
              welcome = variables.ulm_morning;
            } else {
              welcome = variables.ulm_hello;
            }
            return welcome + ', ' + '   <br>' + user.name + '!';
          ]]]
        styles:
          name:
            - align-self: "start"
            - justify-self: "start"
            - font-weight: "bold"
            - font-size: "24px"
            - margin-left: "16px"
          grid:
            - grid-template-areas: "'i n' 'i l'"
            - grid-template-columns: "min-content auto"
            - grid-template-rows: "min-content min-content"
            - text-align: "start"
          card:
            - box-shadow: "none"
            - padding-bottom: "8px"
    item3:
      card:
        type: custom:button-card
        tap_action:
          action: fire-dom-event
          browser_mod:
            service: browser_mod.popup
            data:
              size: fullscreen
              content:
                type: "custom:button-card"
                template: "popup_weather_forecast"
                entity: weather.weather
        styles:
          card:
            - background-color: "rgba(0,0,0,0)"
            - color: var(--text-color-off)
            - font-size: 20px
            - font-weight: 400
            - padding: 12px
            - box-shadow: "none"
          name:
            - justify-self: stretch
        name: |
          [[[ return `<div style='display: flex';>
              <div>${states['sensor.neat_time'].state} | </div>
              <span style='color:black;width:100%;'>
              <marquee>${states['sensor.weather_forecast_text'].state}</marquee></span>`; ]]]
    item4:
      card:
        type: "custom:button-card"
        template: >
          [[[
            if(variables.entity_1.nav && variables.entity_2.nav && variables.entity_3.nav && variables.entity_4.nav && variables.entity_5.nav){
              return 'card_esh_welcome_nav'
            }
          ]]]
        styles:
          card:
            - border-radius: "none"
            - box-shadow: "none"
            - padding: "4px"
        variables:
          entity_1: "[[[ return variables.entity_1]]]"
          entity_2: "[[[ return variables.entity_2]]]"
          entity_3: "[[[ return variables.entity_3]]]"
          entity_4: "[[[ return variables.entity_4]]]"
          entity_5: "[[[ return variables.entity_5]]]"

    item5:
      card:
        type: "horizontal-stack"
        cards:
          - type: "custom:button-card"
            template:
              - "icon_info_bg"
              - "ulm_language_variables"
              - "ulm_custom_card_person_language_variables"
              - "custom_popup_person"
            variables:
              ulm_card_person_use_entity_picture1: false
              ulm_card_person_zones: ""
            triggers_update: "all"
            show_entity_picture: "[[[ return variables.ulm_card_person_use_entity_picture1 ]]]"
            show_label: false
            show_name: false
            icon: "mdi:face-man"
            entity_picture: >
              [[[
                if (variables.ulm_card_person_use_entity_picture == true){
                  return states[variables.ulm_card_person_entity1].attributes.entity_picture;
                } else{
                  return null;
                }
              ]]]
            label: >
              [[[
                var location = states[variables.ulm_card_person_entity1].state
                if (location == "unavailable"){
                  return variables.ulm_unavailable;
                } else if (location == "not_home"){
                  return variables.ulm_custom_card_person_not_home;
                } else if (location == "gym"){
                  return variables.ulm_custom_card_person_gym;
                } else if (location == "work"){
                  return variables.ulm_custom_card_person_work;
                } else{
                  return (location == "home") ? variables.ulm_custom_card_person_home : location;
                }
              ]]]
            name: "[[[ return states[variables.ulm_card_person_entity1].attributes.friendly_name ]]]"
            entity: "[[[ return variables.ulm_card_person_entity1; ]]]"
            styles:
              icon:
                - color: "rgba(var(--color-theme), 0.9)"
                - width: >
                    [[[
                      if (variables.ulm_card_person_use_entity_picture1 == true){
                        return "42px";
                      } else {
                        return "20px";
                      }
                    ]]]
              img_cell:
                - place-self: center left
              grid:
                - grid-template-areas: "'i n network battery find' 'i l network battery find'"
                - grid-template-columns: "auto 1fr auto auto"
                - justify-items: "center"
              custom_fields:
                notification:
                  - border-radius: "50%"
                  - position: "absolute"
                  - left: "38px"
                  - top: "8px"
                  - height: "16px"
                  - width: "16px"
                  - border: "2px solid var(--card-background-color)"
                  - font-size: "12px"
                  - line-height: "14px"
                  - background-color: >
                      [[[
                        if (states[variables.ulm_card_person_entity1].state == 'home'){
                          return "rgba(var(--color-green),1)";
                        } else if (states[variables.ulm_card_person_entity1].state == 'gym') {
                          return "rgba(var(--color-purple),1)";
                        } else if (states[variables.ulm_card_person_entity1].state == 'work') {
                          return "rgba(var(--color-yellow),1)";
                        } else {
                          return "rgba(var(--color-red),1)";
                        }
                      ]]]
                network:
                  - align-self: center
                battery:
                  - align-self: center
              card:
                - opacity: >
                    [[[
                      if (states[variables.ulm_card_person_entity1].state == 'home'){
                        return "1";
                      } else if (states[variables.ulm_card_person_entity1].state == 'gym') {
                        return "0.6";
                      } else if (states[variables.ulm_card_person_entity1].state == 'work') {
                        return "0.6";
                      } else {
                        return "0.6";
                      }
                    ]]]

            custom_fields:
              notification: >
                [[[
                  var zones = variables.ulm_card_person_zones1;
                  var person_location = states[variables.ulm_card_person_entity1].state;
                  if (person_location !== 'home'){
                    for (const item of zones){
                      if (person_location == states[item]?.attributes?.friendly_name){
                        var icon = (states[item].attributes.icon !== null) ? states[item].attributes.icon : 'mdi:help-circle';
                        return '<ha-icon icon="' + icon + '" style="width: 10px; height: 10px; color: var(--primary-background-color);"></ha-icon>';
                      } else if (person_location == 'not_home'){
                        return '<ha-icon icon="mdi:home-minus" style="width: 10px; height: 10px; color: var(--primary-background-color);"></ha-icon>';
                      } else if (person_location == 'gym'){
                        return '<ha-icon icon="mdi:dumbbell" style="width: 10px; height: 10px; color: var(--primary-background-color);"></ha-icon>';
                      } else if (person_location == 'work'){
                        return '<ha-icon icon="mdi:briefcase" style="width: 10px; height: 10px; color: var(--primary-background-color);"></ha-icon>';
                      }
                    }
                  } else{
                    return '<ha-icon icon="mdi:home-variant" style="width: 10px; height: 10px; color: var(--primary-background-color);"></ha-icon>';
                  }
                ]]]

              battery: |
                [[[
                  if (states[variables.ulm_card_person_battery_state1].state == 'Charging' ) { 
                    return `<ha-icon
                    icon="mdi:battery-charging"
                    style="width: 14px; height: 14px; color: rgba(var(--color-yellow), 0.9)">
                    </ha-icon><span style="font-size: 14px; font-weight: bold; color: rgba(var(--color-yellow), 0.9)">${states[variables.ulm_card_person_battery_level1].state}%</span>`;
                  } else {
                    return `<ha-icon
                    icon="mdi:battery"
                    style="width: 14px; height: 14px; color: rgba(var(--color-theme), 0.9)">
                    </ha-icon><span style="font-size: 14px; font-weight: bold; color: rgba(var(--color-theme), 0.9)">${states[variables.ulm_card_person_battery_level1].state}%</span>`;
                  }
                ]]]

              network: |
                [[[
                  if (states[variables.ulm_card_person_wifi_connection1].state == 'Wi-Fi' ) { 
                    return `<ha-icon
                    icon="mdi:wifi"
                    style="width: 16px; height: 16px; padding-right: 5px; color: rgba(var(--color-theme), 0.9)">
                    </ha-icon>`;
                  } else {
                    return `<ha-icon
                    icon="mdi:signal"
                    style="width: 16px; height: 16px; padding-right: 5px; color: rgba(var(--color-theme), 0.9)">
                    </ha-icon>`; 
                  }
                ]]]

              find:
                card:
                  template:
                    - "icon_info_bg"
                    - "blue"
                  show_name: false
                  show_label: false
                  type: "custom:button-card"
                  entity: "[[[ return variables.ulm_card_person_findmy_script1 ]]]"
                  icon: "mdi:phone-alert"
                  tap_action:
                    action: "toggle"
                  styles:
                    card:
                      - box-shadow: "none"
                      - padding: "2px"

          - type: "custom:button-card"
            template:
              - "icon_info_bg"
              - "ulm_language_variables"
              - "ulm_custom_card_person_language_variables"
              - "custom_popup_person"
            variables:
              ulm_card_person_use_entity_picture2: false
              ulm_card_person_zones: ""
            triggers_update: "all"
            show_entity_picture: "[[[ return variables.ulm_card_person_use_entity_picture2 ]]]"
            show_label: false
            show_name: false
            icon: "mdi:face-man"
            entity_picture: >
              [[[
                if (variables.ulm_card_person_use_entity_picture2 == true){
                  return states[variables.ulm_card_person_entity2].attributes.entity_picture;
                } else{
                  return null;
                }
              ]]]
            label: >
              [[[
                var location = states[variables.ulm_card_person_entity2].state
                if (location == "unavailable"){
                  return variables.ulm_unavailable;
                } else if (location == "not_home"){
                  return variables.ulm_custom_card_person_not_home;
                } else if (location == "gym"){
                  return variables.ulm_custom_card_person_gym;
                } else if (location == "work"){
                  return variables.ulm_custom_card_person_work;
                } else{
                  return (location == "home") ? variables.ulm_custom_card_person_home : location;
                }
              ]]]
            name: "[[[ return states[variables.ulm_card_person_entity2].attributes.friendly_name ]]]"
            entity: "[[[ return variables.ulm_card_person_entity2; ]]]"
            styles:
              icon:
                - color: "rgba(var(--color-theme), 0.9)"
                - width: >
                    [[[
                      if (variables.ulm_card_person_use_entity_picture2 == true){
                        return "42px";
                      } else {
                        return "20px";
                      }
                    ]]]
              img_cell:
                - place-self: center left
              grid:
                - grid-template-areas: "'i n network battery find' 'i l network battery find'"
                - grid-template-columns: "auto 1fr auto auto"
                - justify-items: "center"
              custom_fields:
                notification:
                  - border-radius: "50%"
                  - position: "absolute"
                  - left: "38px"
                  - top: "8px"
                  - height: "16px"
                  - width: "16px"
                  - border: "2px solid var(--card-background-color)"
                  - font-size: "12px"
                  - line-height: "14px"
                  - background-color: >
                      [[[
                        if (states[variables.ulm_card_person_entity2].state == 'home'){
                          return "rgba(var(--color-green),1)";
                        } else if (states[variables.ulm_card_person_entity2].state == 'gym') {
                          return "rgba(var(--color-purple),1)";
                        } else if (states[variables.ulm_card_person_entity2].state == 'work') {
                          return "rgba(var(--color-yellow),1)";
                        } else {
                          return "rgba(var(--color-red),1)";
                        }
                      ]]]
                network:
                  - align-self: center
                battery:
                  - align-self: center
              card:
                - opacity: >
                    [[[
                      if (states[variables.ulm_card_person_entity2].state == 'home'){
                        return "1";
                      } else if (states[variables.ulm_card_person_entity2].state == 'gym') {
                        return "0.6";
                      } else if (states[variables.ulm_card_person_entity2].state == 'work') {
                        return "0.6";
                      } else {
                        return "0.6";
                      }
                    ]]]

            custom_fields:
              notification: >
                [[[
                  var zones = variables.ulm_card_person_zones2;
                  var person_location = states[variables.ulm_card_person_entity2].state;
                  if (person_location !== 'home'){
                    for (const item of zones){
                      if (person_location == states[item]?.attributes?.friendly_name){
                        var icon = (states[item].attributes.icon !== null) ? states[item].attributes.icon : 'mdi:help-circle';
                        return '<ha-icon icon="' + icon + '" style="width: 10px; height: 10px; color: var(--primary-background-color);"></ha-icon>';
                      } else if (person_location == 'not_home'){
                        return '<ha-icon icon="mdi:home-minus" style="width: 10px; height: 10px; color: var(--primary-background-color);"></ha-icon>';
                      } else if (person_location == 'gym'){
                        return '<ha-icon icon="mdi:dumbbell" style="width: 10px; height: 10px; color: var(--primary-background-color);"></ha-icon>';
                      } else if (person_location == 'work'){
                        return '<ha-icon icon="mdi:briefcase" style="width: 10px; height: 10px; color: var(--primary-background-color);"></ha-icon>';
                      }
                    }
                  } else{
                    return '<ha-icon icon="mdi:home-variant" style="width: 10px; height: 10px; color: var(--primary-background-color);"></ha-icon>';
                  }
                ]]]

              battery: |
                [[[
                  if (states[variables.ulm_card_person_battery_state2].state == 'Charging' ) { 
                    return `<ha-icon
                    icon="mdi:battery-charging"
                    style="width: 14px; height: 14px; color: rgba(var(--color-yellow), 0.9)">
                    </ha-icon><span style="font-size: 14px; font-weight: bold; color: rgba(var(--color-yellow), 0.9)">${states[variables.ulm_card_person_battery_level2].state}%</span>`;
                  } else {
                    return `<ha-icon
                    icon="mdi:battery"
                    style="width: 14px; height: 14px; color: rgba(var(--color-theme), 0.9)">
                    </ha-icon><span style="font-size: 14px; font-weight: bold; color: rgba(var(--color-theme), 0.9)">${states[variables.ulm_card_person_battery_level2].state}%</span>`;
                  }
                ]]]

              network: |
                [[[
                  if (states[variables.ulm_card_person_wifi_connection2].state == 'Wi-Fi' ) { 
                    return `<ha-icon
                    icon="mdi:wifi"
                    style="width: 16px; height: 16px; padding-right: 5px; color: rgba(var(--color-theme), 0.9)">
                    </ha-icon>`;
                  } else {
                    return `<ha-icon
                    icon="mdi:signal"
                    style="width: 16px; height: 16px; padding-right: 5px; color: rgba(var(--color-theme), 0.9)">
                    </ha-icon>`; 
                  }
                ]]]

              find:
                card:
                  template:
                    - "icon_info_bg"
                    - "blue"
                  show_name: false
                  show_label: false
                  type: "custom:button-card"
                  entity: "[[[ return variables.ulm_card_person_findmy_script2 ]]]"
                  icon: "mdi:phone-alert"
                  tap_action:
                    action: "toggle"
                  styles:
                    card:
                      - box-shadow: "none"
                      - padding: "2px"
          
card_esh_welcome_title:
  tap_action:
    action: "none"
  show_icon: false
  show_label: true
  show_name: true
  styles:
    card:
      - background-color: "rgba(0,0,0,0)"
      - box-shadow: "none"
      - height: "auto"
      - width: "auto"
      - margin-top: "-10px"
      - margin-left: "16px"
      - margin-bottom: "-15px"
    grid:
      - grid-template-areas: "'n' 'l'"
      - grid-template-columns: "1fr"
      - grid-template-rows: "min-content min-content"
    name:
      - justify-self: "start"
      - font-weight: "bold"
      - font-size: "20px"
    label:
      - justify-self: "start"
      - font-weight: "bold"
      - font-size: "1rem"
      - opacity: "0.4"

card_esh_welcome_nav:
  show_icon: false
  show_name: true
  show_label: false
  styles:
    grid:
      - grid-template-areas: "'item1 item2 item3 item4 item5'"
      - grid-template-columns: "1fr 1fr 1fr 1fr 1fr"
      - grid-template-rows: "min-content"
      - justify-items: "center"
    card:
      - border-radius: "var(--border-radius)"
      - box-shadow: "var(--box-shadow)"
      - padding: "12px"
      - overflow: "visible"
  custom_fields:
    item1:
      card:
        type: "custom:button-card"
        template: "card_esh_welcome_pill_nav"
        custom_fields:
          item1:
            card:
              type: "custom:button-card"
              tap_action:
                action: "navigate"
                navigation_path: "[[[ return variables.entity_1.nav; ]]]"
              icon: "[[[ return variables.entity_1.icon ]]]"
              styles:
                icon:
                  - color: "[[[ return `rgba(var(--color-${variables.entity_1.color}), 1)`;]]]"
                img_cell:
                  - background-color: "[[[ return `rgba(var(--color-${variables.entity_1.color}), 0.20)`;]]]"
          item2:
            card:
              type: "custom:button-card"
              tap_action:
                action: "navigate"
                navigation_path: "[[[ return variables.entity_1.nav; ]]]"
              name: "[[[ return variables.entity_1.name ]]]"
    item2:
      card:
        type: "custom:button-card"
        template: "card_esh_welcome_pill_nav"
        entity: "[[[ return variables.entity_2.entity_id ]]]"
        custom_fields:
          item1:
            card:
              type: "custom:button-card"
              tap_action:
                action: "navigate"
                navigation_path: "[[[ return variables.entity_2.nav; ]]]"
              icon: "[[[ return variables.entity_2.icon ]]]"
              styles:
                icon:
                  - color: "[[[ return `rgba(var(--color-${variables.entity_2.color}), 1)`;]]]"
                img_cell:
                  - background-color: "[[[ return `rgba(var(--color-${variables.entity_2.color}), 0.20)`;]]]"
          item2:
            card:
              type: "custom:button-card"
              tap_action:
                action: "navigate"
                navigation_path: "[[[ return variables.entity_2.nav; ]]]"
              name: "[[[ return variables.entity_2.name ]]]"
    item3:
      card:
        type: "custom:button-card"
        template: "card_esh_welcome_pill_nav"
        entity: "[[[ return variables.entity_3.entity_id ]]]"
        custom_fields:
          item1:
            card:
              type: "custom:button-card"
              tap_action:
                action: "navigate"
                navigation_path: "[[[ return variables.entity_3.nav; ]]]"
              icon: "[[[ return variables.entity_3.icon ]]]"
              styles:
                icon:
                  - color: "[[[ return `rgba(var(--color-${variables.entity_3.color}), 1)`;]]]"
                img_cell:
                  - background-color: "[[[ return `rgba(var(--color-${variables.entity_3.color}), 0.20)`;]]]"
          item2:
            card:
              type: "custom:button-card"
              tap_action:
                action: "navigate"
                navigation_path: "[[[ return variables.entity_3.nav; ]]]"
              name: "[[[ return variables.entity_3.name ]]]"
    item4:
      card:
        type: "custom:button-card"
        template: "card_esh_welcome_pill_nav"
        entity: "[[[ return variables.entity_4.entity_id ]]]"
        custom_fields:
          item1:
            card:
              type: "custom:button-card"
              tap_action:
                action: "navigate"
                navigation_path: "[[[ return variables.entity_4.nav; ]]]"
              icon: "[[[ return variables.entity_4.icon ]]]"
              styles:
                icon:
                  - color: "[[[ return `rgba(var(--color-${variables.entity_4.color}), 1)`;]]]"
                img_cell:
                  - background-color: "[[[ return `rgba(var(--color-${variables.entity_4.color}), 0.20)`;]]]"
          item2:
            card:
              type: "custom:button-card"
              tap_action:
                action: "navigate"
                navigation_path: "[[[ return variables.entity_4.nav; ]]]"
              name: "[[[ return variables.entity_4.name ]]]"
    item5:
      card:
        type: "custom:button-card"
        template: "card_esh_welcome_pill_nav"
        custom_fields:
          item1:
            card:
              type: "custom:button-card"
              tap_action:
                action: "navigate"
                navigation_path: "[[[ return variables.entity_5.nav; ]]]"
              icon: "[[[ return variables.entity_5.icon ]]]"
              styles:
                icon:
                  - color: "[[[ return `rgba(var(--color-${variables.entity_5.color}), 1)`;]]]"
                img_cell:
                  - background-color: "[[[ return `rgba(var(--color-${variables.entity_5.color}), 0.20)`;]]]"
          item2:
            card:
              type: "custom:button-card"
              tap_action:
                action: "navigate"
                navigation_path: "[[[ return variables.entity_1.nav; ]]]"
              name: "[[[ return variables.entity_5.name ]]]"

card_esh_welcome_pill_nav:
  show_icon: false
  show_label: false
  show_name: false
  state:
    - value: "on"
      styles:
        card:
          - overflow: "visible"
          - box-shadow: "none"
  styles:
    grid:
      - grid-template-areas: "'item1' 'item2'"
      - grid-template-columns: "min-content"
      - grid-template-rows: "1fr 1fr"
      - row-gap: "12px"
      - justify-items: "center"
      - column-gap: "auto"
    card:
      - border-radius: "50px"
      - place-self: "center"
      - width: "52px"
      - height: "84px"
      - box-shadow: >
          [[[
            if (hass.themes.darkMode){
              return "0px 2px 4px 0px rgba(0,0,0,0.80)";
            } else {
              return "var(--box-shadow)";
            }
          ]]]
  color: "var(--google-grey)"
  custom_fields:
    item1:
      card:
        type: "custom:button-card"
        show_icon: true
        show_label: false
        show_name: false
        styles:
          grid:
            - grid-template-areas: "i"
          icon:
            - color: "[[[ return `rgba(var(--color-theme), 0.20)`;]]]"
            - width: "20px"
          img_cell:
            - background-color: "[[[ return `rgba(var(--color-theme), 0.05)`;]]] "
            - border-radius: "50%"
            - width: "42px"
            - height: "42px"
          card:
            - box-shadow: "none"
            - border-radius: "50px"
            - padding: "5px"
        state:
          - value: "on"
            styles:
              card:
                - overflow: "visible"
                - box-shadow: >
                    [[[
                      if (hass.themes.darkMode){
                        return "0px 2px 4px 0px rgba(0,0,0,0.80)";
                      } else {
                        return "var(--box-shadow)";
                      }
                    ]]]
    item2:
      card:
        type: "custom:button-card"
        show_icon: false
        show_label: false
        styles:
          grid:
            - grid-template-areas: "n"
          name:
            - font-weight: "bold"
            - font-size: "9.5px"
            - width: "33px"
            - padding-bottom: "7px"
          card:
            - box-shadow: "none"
            - padding: "0px 5px 5px 5px"
            - margin-top: "-5px"
            - border-radius: "50px"

card_esh_welcome_topbar:
  show_icon: false
  show_name: true
  show_label: false
  styles:
    grid:
      - grid-template-areas: "'item1 item2 item3'"
      - grid-template-columns: "1fr 7fr 1fr"
      - grid-template-rows: "min-content"
      - justify-items: "center"
    card:
      - border-radius: "var(--border-radius)"
      - box-shadow: "var(--box-shadow)"
      - padding: "12px"
  custom_fields:
    item1:
      card:
        type: "custom:button-card"
        template: "chips"
        entity: "[[[ return variables.ulm_card_esh_welcome_collapse ]]]"
        icon: "mdi:chevron-up"
        show_icon: true
        styles:
          grid:
            - grid-template-areas: "'i'"
          card:
            - box-shadow: >
                [[[
                  if (hass.themes.darkMode){
                    return "0px 2px 4px 0px rgba(0,0,0,0.80)";
                  } else {
                    return "var(--box-shadow)";
                  }
                ]]]
        state:
          - value: "on"
            icon: "mdi:chevron-down"
            styles:
              icon:
                - color: "rgb(var(--color-theme))"
        tap_action:
          action: "call-service"
          service: "input_boolean.toggle"
          service_data:
            entity_id: "[[[ return variables.ulm_card_esh_welcome_collapse ]]]"
    item2:
      card:
        type: "horizontal-stack"
        cards:
          - type: 'custom:button-card'
            template: chip_icon_state
            variables:
              ulm_chip_icon_state_icon: '🌡️'
              ulm_chip_icon_state_entity: "[[[ return variables.ulm_chip_icon_state_entity; ]]]"
            styles:
              card:
                - width: "100px"
                - box-shadow: "var(--box-shadow)"
            tap_action:
              action: fire-dom-event
              browser_mod:
                service: browser_mod.popup
                data:
                  size: fullscreen
                  content:
                    type: "custom:button-card"
                    template: "popup_weather_forecast"
                    entity: weather.weather
          - type: 'custom:button-card'
            template: chip_icon_only
            variables:
              ulm_chip_icon_only: '📈'
            tap_action:
              action: fire-dom-event
              browser_mod:
                service: browser_mod.popup
                data:
                  size: fullscreen
                  title: Climate Charts
                  content:
                    type: vertical-stack
                    cards:
                      - type: "custom:button-card"
                        template: card_weather
                        entity: weather.weather
                        variables:
                          ulm_card_weather_primary_info:
                            - extrema
                          ulm_card_weather_secondary_info:
                            - precipitation_probability
                          ulm_card_weather_backdrop:
                            fade: true
                      - type: custom:swipe-card
                        cards:
                          - type: vertical-stack
                            cards:
                              - type: "custom:button-card"
                                template: "card_title"
                                name: "Hall"
                              - type: 'custom:button-card'
                                template: card_graph
                                entity: sensor.living_room_temperature
                                variables:
                                  ulm_card_graph_color: "var(--google-yellow)"
                                  ulm_card_graph_name: Temperature
                                  ulm_card_graph_entity: sensor.living_room_temperature
                                  ulm_card_graph_type: fill
                                  ulm_card_graph_hours: 24
                                  ulm_card_graph_group_by: interval
                              - type: 'custom:button-card'
                                template: card_graph
                                entity: sensor.living_room_humidity
                                variables:
                                  ulm_card_graph_color: "var(--google-violet)"
                                  ulm_card_graph_name: Humidity
                                  ulm_card_graph_entity: sensor.living_room_humidity
                                  ulm_card_graph_type: fill
                                  ulm_card_graph_hours: 24
                                  ulm_card_graph_group_by: interval
                              - type: 'custom:button-card'
                                template: card_graph
                                entity: sensor.living_room_air_pressure
                                variables:
                                  ulm_card_graph_color: "var(--google-green)"
                                  ulm_card_graph_name: Air Pressure
                                  ulm_card_graph_entity: sensor.living_room_air_pressure
                                  ulm_card_graph_type: fill
                                  ulm_card_graph_hours: 24
                                  ulm_card_graph_group_by: interval
                          - type: vertical-stack
                            cards:
                              - type: "custom:button-card"
                                template: "card_title"
                                name: "Living Room"
                              - type: 'custom:button-card'
                                template: card_graph
                                entity: sensor.living_room_temperature
                                variables:
                                  ulm_card_graph_color: "var(--google-yellow)"
                                  ulm_card_graph_name: Temperature
                                  ulm_card_graph_entity: sensor.living_room_temperature
                                  ulm_card_graph_type: fill
                                  ulm_card_graph_hours: 24
                                  ulm_card_graph_group_by: interval
                              - type: 'custom:button-card'
                                template: card_graph
                                entity: sensor.living_room_humidity
                                variables:
                                  ulm_card_graph_color: "var(--google-violet)"
                                  ulm_card_graph_name: Humidity
                                  ulm_card_graph_entity: sensor.living_room_humidity
                                  ulm_card_graph_type: fill
                                  ulm_card_graph_hours: 24
                                  ulm_card_graph_group_by: interval
                              - type: 'custom:button-card'
                                template: card_graph
                                entity: sensor.living_room_air_pressure
                                variables:
                                  ulm_card_graph_color: "var(--google-green)"
                                  ulm_card_graph_name: Air Pressure
                                  ulm_card_graph_entity: sensor.living_room_air_pressure
                                  ulm_card_graph_type: fill
                                  ulm_card_graph_hours: 24
                                  ulm_card_graph_group_by: interval
                          - type: vertical-stack
                            cards:
                              - type: "custom:button-card"
                                template: "card_title"
                                name: "Kitchen"
                              - type: 'custom:button-card'
                                template: card_graph
                                entity: sensor.kitchen_temperature
                                variables:
                                  ulm_card_graph_color: "var(--google-yellow)"
                                  ulm_card_graph_name: Temperature
                                  ulm_card_graph_entity: sensor.kitchen_temperature
                                  ulm_card_graph_type: fill
                                  ulm_card_graph_hours: 24
                                  ulm_card_graph_group_by: interval
                              - type: 'custom:button-card'
                                template: card_graph
                                entity: sensor.kitchen_humidity
                                variables:
                                  ulm_card_graph_color: "var(--google-violet)"
                                  ulm_card_graph_name: Humidity
                                  ulm_card_graph_entity: sensor.kitchen_humidity
                                  ulm_card_graph_type: fill
                                  ulm_card_graph_hours: 24
                                  ulm_card_graph_group_by: interval
                              - type: 'custom:button-card'
                                template: card_graph
                                entity: sensor.kitchen_air_pressure
                                variables:
                                  ulm_card_graph_color: "var(--google-green)"
                                  ulm_card_graph_name: Air Pressure
                                  ulm_card_graph_entity: sensor.kitchen_air_pressure
                                  ulm_card_graph_type: fill
                                  ulm_card_graph_hours: 24
                                  ulm_card_graph_group_by: interval
                          - type: vertical-stack
                            cards:
                              - type: "custom:button-card"
                                template: "card_title"
                                name: "Bedroom"
                              - type: 'custom:button-card'
                                template: card_graph
                                entity: sensor.bedroom_temperature
                                variables:
                                  ulm_card_graph_color: "var(--google-yellow)"
                                  ulm_card_graph_name: Temperature
                                  ulm_card_graph_entity: sensor.bedroom_temperature
                                  ulm_card_graph_type: fill
                                  ulm_card_graph_hours: 24
                                  ulm_card_graph_group_by: interval
                              - type: 'custom:button-card'
                                template: card_graph
                                entity: sensor.bedroom_humidity
                                variables:
                                  ulm_card_graph_color: "var(--google-violet)"
                                  ulm_card_graph_name: Humidity
                                  ulm_card_graph_entity: sensor.bedroom_humidity
                                  ulm_card_graph_type: fill
                                  ulm_card_graph_hours: 24
                                  ulm_card_graph_group_by: interval
                              - type: 'custom:button-card'
                                template: card_graph
                                entity: sensor.bedroom_air_pressure
                                variables:
                                  ulm_card_graph_color: "var(--google-green)"
                                  ulm_card_graph_name: Air Pressure
                                  ulm_card_graph_entity: sensor.bedroom_air_pressure
                                  ulm_card_graph_type: fill
                                  ulm_card_graph_hours: 24
                                  ulm_card_graph_group_by: interval
                          - type: vertical-stack
                            cards:
                              - type: "custom:button-card"
                                template: "card_title"
                                name: "Bathroom"
                              - type: 'custom:button-card'
                                template: card_graph
                                entity: sensor.bathroom_temperature
                                variables:
                                  ulm_card_graph_color: "var(--google-yellow)"
                                  ulm_card_graph_name: Temperature
                                  ulm_card_graph_entity: sensor.bathroom_temperature
                                  ulm_card_graph_type: fill
                                  ulm_card_graph_hours: 24
                                  ulm_card_graph_group_by: interval
                              - type: 'custom:button-card'
                                template: card_graph
                                entity: sensor.bathroom_humidity
                                variables:
                                  ulm_card_graph_color: "var(--google-violet)"
                                  ulm_card_graph_name: Humidity
                                  ulm_card_graph_entity: sensor.bathroom_humidity
                                  ulm_card_graph_type: fill
                                  ulm_card_graph_hours: 24
                                  ulm_card_graph_group_by: interval
                              - type: 'custom:button-card'
                                template: card_graph
                                entity: sensor.bathroom_air_pressure
                                variables:
                                  ulm_card_graph_color: "var(--google-green)"
                                  ulm_card_graph_name: Air Pressure
                                  ulm_card_graph_entity: sensor.bathroom_air_pressure
                                  ulm_card_graph_type: fill
                                  ulm_card_graph_hours: 24
                                  ulm_card_graph_group_by: interval
                          - type: vertical-stack
                            cards:
                              - type: "custom:button-card"
                                template: "card_title"
                                name: "Bedroom"
                              - type: 'custom:button-card'
                                template: card_graph
                                entity: sensor.living_room_temperature
                                variables:
                                  ulm_card_graph_color: "var(--google-yellow)"
                                  ulm_card_graph_name: Temperature
                                  ulm_card_graph_entity: sensor.living_room_temperature
                                  ulm_card_graph_type: fill
                                  ulm_card_graph_hours: 24
                                  ulm_card_graph_group_by: interval
                              - type: 'custom:button-card'
                                template: card_graph
                                entity: sensor.living_room_humidity
                                variables:
                                  ulm_card_graph_color: "var(--google-violet)"
                                  ulm_card_graph_name: Humidity
                                  ulm_card_graph_entity: sensor.living_room_humidity
                                  ulm_card_graph_type: fill
                                  ulm_card_graph_hours: 24
                                  ulm_card_graph_group_by: interval
                              - type: 'custom:button-card'
                                template: card_graph
                                entity: sensor.living_room_air_pressure
                                variables:
                                  ulm_card_graph_color: "var(--google-green)"
                                  ulm_card_graph_name: Air Pressure
                                  ulm_card_graph_entity: sensor.living_room_air_pressure
                                  ulm_card_graph_type: fill
                                  ulm_card_graph_hours: 24
                                  ulm_card_graph_group_by: interval
          - type: 'custom:button-card'
            template: chip_double_state
            variables:
              ulm_chip_double_state_entity1: "[[[ return variables.ulm_chip_double_state_entity1; ]]]"
              ulm_chip_double_state_entity2: "[[[ return variables.ulm_chip_double_state_entity2; ]]]"
    item3:
      card:
        type: "custom:button-card"
        tap_action:
          action: "navigate"
          navigation_path: "/config/dashboard"
        template: "chip_mdi_icon_only"
        variables:
          ulm_chip_mdi_icon_only_icon: "mdi:cog-outline"
        styles:
          card:
            - align-self: "end"
            - box-shadow: >
                [[[
                  if (hass.themes.darkMode){
                    return "0px 2px 4px 0px rgba(0,0,0,0.80)";
                  } else {
                    return "var(--box-shadow)";
                  }
                ]]]

find_my_phone_button:
  template:
    - "ulm_custom_card_person_language_variables"
  tap_action:
    action: "toggle"
  icon: "mdi:volume-high"
  name: "[[[ return variables.ulm_custom_card_person_findmy; ]]]"
  size: "1.4em"
  styles:
    icon:
      - color: "rgba(var(--color-blue),1)"
    name:
      - font-size: "1.06em"
      - letterspacing: "0.015em"
    grid:
      - grid-template-areas: "'i n'"
      - grid-column-gap: "0.3em"
    card:
      - color: "rgba(var(--color-blue),1)"
      - background: "rgba(var(--color-blue),0.2"
      - border-radius: "0.6em"
      - padding: "1em 1.4em"
      - width: "max-content"
      - font-size: "1.06em"
      - font-weight: "500"
      - letter-spacing: "0.015em"
      - box-shadow: "none"
      - align-self: center

custom_popup_person:
  tap_action:
    action: "fire-dom-event"
    browser_mod:
      service: "browser_mod.popup"
      data:
        title: "[[[ return states[variables.ulm_card_person_entity].attributes.friendly_name ]]]"
        style:
          $: >
            [[[
              if (hass.themes.theme.includes("desktop")){
                var dialog = `
                  .mdc-dialog__surface{
                    border-radius: var(--border-radius) !important;
                  }
                `;
              } else{
                var dialog = "";
              }
              return `
                *{
                  --secondary-background-color: none !important;
                }
                ${dialog}
              `;
            ]]]
          hui-vertical-stack-card:
            $: >
              button-card {
                align-self: center;
                padding: 0.2em 0 2.3em 0;
              }
              hui-entities-card{
                padding: 0.8em 1.4em;
              }
            $hui-entities-card$: >
              ha-card{
                box-shadow: none;
              }
            $hui-history-graph-card$: >
              .content {
                padding: 0 2.4em !important;
              }
              ha-card{
                box-shadow: none;
              }
            $hui-glance-card$: >
              ha-card{
                box-shadow: none;
              }
            $hui-map-card:
              $: >
                ha-icon-button {
                  color: rgba(var(--color-blue),1);
                }
              $ha-map:
                $: >
                  .leaflet-control-attribution {
                    display: none;
                  }
                  .leaflet-touch .leaflet-control-layers, .leaflet-touch .leaflet-bar {
                    border: 2px solid rgba(var(--color-blue),0.4) !important;
                  }
                  .leaflet-bar a {
                    background-color: rgba(var(--color-blue),0.2) !important;
                    color: rgba(var(--color-blue),1) !important;
                  }
                  .leaflet-bar a:first-child {
                    border-bottom: 2px solid rgba(var(--color-blue),0.4) !important;
                  }
                  .leaflet-pane.leaflet-tile-pane {
                    filter: contrast(95%);
                  }
        content:
          type: "vertical-stack"
          cards:
            - type: "entities"
              entities:
                - entity: "[[[ return variables.ulm_card_person_entity; ]]]"
                  secondary_info: "last-changed"
            - type: "history-graph"
              entities:
                - entity: "[[[ return variables.ulm_card_person_entity; ]]]"
            - type: "glance"
              show_state: false
              entities:
                - entity: "[[[ return variables.ulm_card_person_wifi_tracker; ]]]"
                  name: "WiFi"
                  icon: "mdi:wifi"
                  style: &state >
                    state-badge{
                      color: {{ 'rgba(var(--color-blue),1)' if is_state(config.entity, 'home') }};
                      filter: {{ 'opacity(100%)' if is_state(config.entity, 'home') else 'opacity(40%)'}};
                    }
                - entity: "[[[ return variables.ulm_card_person_gps_tracker; ]]]"
                  name: "GPS"
                  icon: "mdi:map-marker"
                  style: *state
            - type: "horizontal-stack"
              cards:
                - type: custom:gap-card
                  height: 10px
                - type: "custom:button-card"
                  template:
                    - "find_my_phone_button"
                  entity: "[[[ return variables.ulm_card_person_findmy_script; ]]]"
                - type: custom:gap-card
                  height: 10px
            - type: "map"
              aspect_ratio: "12x10"
              default_zoom: 16
              entities: "[[[ return [variables.ulm_card_person_gps_tracker]; ]]]"