---
custom_card_page:
  variables:
    ulm_weather: "[[[ return variables.ulm_weather]]]"
    ulm_language: "[[[ return hass['language']; ]]]"
    ulm_chip_back_path: "[[[ return variables.ulm_chip_back_path; ]]]"
    ulm_chip_icon_state_entity: "[[[ return variables.ulm_chip_icon_state_entity ]]]"
    entity_1:
      entity_id: ""
      color: >
        [[[
          var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink'];
          var color = colors[Math.floor(Math.random() * colors.length)];
          return color;
        ]]]
    entity_2:
      entity_id: ""
      color: >
        [[[
          var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink'];
          var color = colors[Math.floor(Math.random() * colors.length)];
          return color;
        ]]]
    entity_3:
      entity_id: ""
      color: >
        [[[
          var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink'];
          var color = colors[Math.floor(Math.random() * colors.length)];
          return color;
        ]]]
    entity_4:
      entity_id: ""
      color: >
        [[[
          var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink'];
          var color = colors[Math.floor(Math.random() * colors.length)];
          return color;
        ]]]
    entity_5:
      entity_id: ""
      color: >
        [[[
          var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink'];
          var color = colors[Math.floor(Math.random() * colors.length)];
          return color;
        ]]]
    entity_6:
      entity_id: ""
      color: >
        [[[
          var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink'];
          var color = colors[Math.floor(Math.random() * colors.length)];
          return color;
        ]]]
    entity_7:
      entity_id: ""
      color: >
        [[[
          var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink'];
          var color = colors[Math.floor(Math.random() * colors.length)];
          return color;
        ]]]
  template:
    - "ulm_language_variables"
    - "ulm_translation_engine"
  show_icon: false
  show_name: false
  show_label: true
  styles:
    grid:
      - grid-template-areas: "'item1' 'item2' 'item3' 'item4'"
      - grid-template-columns: "1fr"
      - grid-template-rows: "min-content min-content"
      - row-gap: "0px"
    card:
      - border-radius: "var(--border-radius)"
      - box-shadow: "var(--box-shadow)"
      - padding: "8px"
    custom_fields:
      item3:
        - display: "block"
      item4:
        - display: "block"
  custom_fields:
    item1:
      card:
        type: "custom:button-card"
        template: "card_topbar_welcome"
        variables:
          ulm_weather: "[[[ return variables.ulm_weather]]]"
          ulm_language: "[[[ return variables.ulm_language ]]]"
          ulm_room_name: "[[[ return variables.ulm_room_name ]]]"
          ulm_chip_back_path: "[[[ return variables.ulm_chip_back_path; ]]]"
          ulm_chip_icon_state_entity: "[[[ return variables.ulm_chip_icon_state_entity ]]]"
        styles:
          card:
            - border-radius: "none"
            - box-shadow: "none"
            - padding: "2px"
            - margin-left: "relative"
    item2:
      card:
        type: "custom:button-card"
        show_icon: false
        show_label: false
        show_name: true
        show_entity_picture: false
        name: "[[[ return variables.ulm_room_name ]]]"
        styles:
          name:
            - align-self: "start"
            - justify-self: "start"
            - font-weight: "bold"
            - font-size: "24px"
            - margin-left: "16px"
          grid:
            - grid-template-areas: "'i n' 'i l'"
            - grid-template-columns: "min-content auto"
            - grid-template-rows: "min-content min-content"
            - text-align: "start"
          card:
            - box-shadow: "none"
            - padding-bottom: "10px"
card_title_welcome:
  tap_action:
    action: "none"
  show_icon: false
  show_label: true
  show_name: true
  styles:
    card:
      - background-color: "rgba(0,0,0,0)"
      - box-shadow: "none"
      - height: "auto"
      - width: "auto"
      - margin-top: "-10px"
      - margin-left: "16px"
      - margin-bottom: "-15px"
    grid:
      - grid-template-areas: "'n' 'l'"
      - grid-template-columns: "1fr"
      - grid-template-rows: "min-content min-content"
    name:
      - justify-self: "start"
      - font-weight: "bold"
      - font-size: "20px"
    label:
      - justify-self: "start"
      - font-weight: "bold"
      - font-size: "1rem"
      - opacity: "0.4"

# pill
card_scenes_pill_welcome:
  show_icon: false
  show_label: false
  show_name: false
  state:
    - operator: "template"
      value: >
        [[[
          return (entity.state !== 'on' && entity.state !== 'playing' && entity.state != variables?.state)
        ]]]
      styles:
        card:
          - overflow: "visible"
          - box-shadow: "none"
  styles:
    grid:
      - grid-template-areas: "'item1' 'item2'"
      - grid-template-columns: "min-content"
      - grid-template-rows: "1fr 1fr"
      - row-gap: "12px"
      - justify-items: "center"
      - column-gap: "auto"
    card:
      - border-radius: "50px"
      - place-self: "center"
      - width: "52px"
      - height: "84px"
      - box-shadow: >
          [[[
            if (hass.themes.darkMode){
              return "0px 2px 4px 0px rgba(0,0,0,0.80)";
            } else {
              return "var(--box-shadow)";
            }
          ]]]
  color: "var(--google-grey)"
  custom_fields:
    item1:
      card:
        type: "custom:button-card"
        show_icon: true
        show_label: false
        show_name: false
        tap_action:
          action: >
            [[[
              if(variables?.nav_path){
                return "navigate"
              }
              else if(entity.entity_id.startsWith("camera.")){
                return "more-info"
              } else {
                return "call-service"
              }
            ]]]
          service: >
            [[[
              if(entity.entity_id.startsWith("scene.")){
                return "scene.turn_on"
              }
              else if(entity.entity_id.startsWith("media_player.")){
                return "media_player.toggle"
              }
              else if(entity.entity_id.startsWith("camera.")){
                return "browser_mod.popup"
              }
              else if(entity.entity_id.startsWith("automation.")){
                return "automation.trigger"
              }
              else if(entity.entity_id.startsWith("input_select.")){
                return "input_select.select_option"
              } else {
                return "homeassistant.toggle"
              }
            ]]]
          navigation_path: "[[[ return variables?.nav_path; ]]]"
          service_data: |
            [[[
              var obj;
              if( entity.entity_id.startsWith("input_select.") )
                obj = { entity_id: entity.entity_id, option: variables.state };
              else
                obj = { entity_id: entity.entity_id };
              return obj;
            ]]]
        styles:
          grid:
            - grid-template-areas: "i"
          icon:
            - color: >
                [[[
                  var color = variables?.color
                  if(hass.themes.darkMode){var color = "#FAFAFA";}
                  return `rgba(var(--color-${color}), 1)`;
                ]]]
            - width: "20px"
          img_cell:
            - background-color: >
                [[[
                  var color = variables?.color
                  var opacity = '0.20'
                  if(hass.themes.darkMode){var opacity = '1'}
                  return `rgba(var(--color-${color}), ${opacity})`;
                ]]]
            - border-radius: "50%"
            - width: "42px"
            - height: "42px"
          card:
            - box-shadow: "none"
            - border-radius: "50px"
            - padding: "5px"
        state:
          - operator: "template"
            value: >
              [[[
                return (entity.state !== 'on' && entity.state !== 'playing' && entity.state != variables?.state)
              ]]]
            styles:
              card:
                - overflow: "visible"
                - box-shadow: >
                    [[[
                      if (hass.themes.darkMode){
                        return "0px 2px 4px 0px rgba(0,0,0,0.80)";
                      } else {
                        return "var(--box-shadow)";
                      }
                    ]]]
    item2:
      card:
        type: "custom:button-card"
        show_icon: false
        show_label: false
        tap_action:
          action: >
            [[[
              if(variables?.nav_path){
                return "navigate"
              } else {
                return "call-service"
              }
            ]]]
          navigation_path: "[[[ return variables?.nav_path; ]]]"
          service: >
            [[[
              if(entity.entity_id.startsWith("scene.")){
                return "scene.turn_on"
              }
              else if(entity.entity_id.startsWith("media_player.")){
                return "media_player.media_play_pause"
              }
              else if(entity.entity_id.startsWith("input_select.")){
                return "input_select.select_option"
              } else {
                return "homeassistant.toggle"
              }
            ]]]
          service_data: |
            [[[
              var obj;
              if( entity.entity_id.startsWith("input_select.") )
                obj = { entity_id: entity.entity_id, option: variables.state };
              else
                obj = { entity_id: entity.entity_id };
              return obj;
            ]]]
        styles:
          grid:
            - grid-template-areas: "n"
          name:
            - justify-self: "center"
            - font-weight: "bold"
            - font-size: "9.5px"
            - padding-bottom: "7px"
            - overflow: "[[[return (entity.state !== 'on' && entity.state !== 'playing' && entity.state != variables?.state) ? 'visible' : 'hidden']]]"
          card:
            - box-shadow: "none"
            - padding: "0px 5px 5px 5px"
            - margin-top: "-5px"
            - border-radius: "50px"
            - overflow: "[[[return (entity.state !== 'on' && entity.state !== 'playing' && entity.state != variables?.state) ? 'visible' : 'hidden']]]"
card_topbar_welcome:
  show_icon: false
  show_name: false
  show_label: false
  styles:
    grid:
      - grid-template-areas: "item1 item2 item3"
      - justify-content: "space-between"
      - display: "flex"
    card:
      - border-radius: "none"
      - box-shadow: "none"
      - padding: "12px"
      - background: "none"
  custom_fields:
    item1:
      card:
        type: "custom:button-card"
        template: chip_home
        variables:
          ulm_chip_back_path: "[[[ return variables.ulm_chip_back_path; ]]]"
        styles:
          grid:
            - grid-template-areas: "'i'"
          card:
            - box-shadow: "var(--box-shadow)"
    item2:
      card:
        type: "horizontal-stack"
        cards:
          - type: "custom:button-card"
            template: chip_icon_state
            variables:
              ulm_chip_icon_state_icon: "🌡️"
              ulm_chip_icon_state_entity: "[[[ return variables.ulm_chip_icon_state_entity; ]]]"
            styles:
              card:
                - width: "100px"
                - box-shadow: "var(--box-shadow)"
            tap_action:
              action: fire-dom-event
              browser_mod:
                service: browser_mod.popup
                data:
                  size: fullscreen
                  content:
                    type: "custom:button-card"
                    template: "popup_weather_forecast"
                    entity: weather.weather
          - type: "custom:button-card"
            template: chip_icon_only
            variables:
              ulm_chip_icon_only: "📈"
            tap_action:
              action: fire-dom-event
              browser_mod:
                service: browser_mod.popup
                data:
                  size: fullscreen
                  title: Climate Charts
                  content:
                    type: vertical-stack
                    cards:
                      - type: "custom:button-card"
                        template: card_weather
                        entity: weather.weather
                        variables:
                          ulm_card_weather_primary_info:
                            - extrema
                          ulm_card_weather_secondary_info:
                            - precipitation_probability
                          ulm_card_weather_backdrop:
                            fade: true
                      - type: custom:swipe-card
                        cards:
                          - type: vertical-stack
                            cards:
                              - type: "custom:button-card"
                                template: "card_title"
                                name: "Hall"
                              - type: "custom:button-card"
                                template: card_graph
                                entity: sensor.living_room_temperature
                                variables:
                                  ulm_card_graph_color: "var(--google-yellow)"
                                  ulm_card_graph_name: Temperature
                                  ulm_card_graph_entity: sensor.living_room_temperature
                                  ulm_card_graph_type: fill
                                  ulm_card_graph_hours: 24
                                  ulm_card_graph_group_by: interval
                              - type: "custom:button-card"
                                template: card_graph
                                entity: sensor.living_room_humidity
                                variables:
                                  ulm_card_graph_color: "var(--google-violet)"
                                  ulm_card_graph_name: Humidity
                                  ulm_card_graph_entity: sensor.living_room_humidity
                                  ulm_card_graph_type: fill
                                  ulm_card_graph_hours: 24
                                  ulm_card_graph_group_by: interval
                              - type: "custom:button-card"
                                template: card_graph
                                entity: sensor.living_room_air_pressure
                                variables:
                                  ulm_card_graph_color: "var(--google-green)"
                                  ulm_card_graph_name: Air Pressure
                                  ulm_card_graph_entity: sensor.living_room_air_pressure
                                  ulm_card_graph_type: fill
                                  ulm_card_graph_hours: 24
                                  ulm_card_graph_group_by: interval
                          - type: vertical-stack
                            cards:
                              - type: "custom:button-card"
                                template: "card_title"
                                name: "Living Room"
                              - type: "custom:button-card"
                                template: card_graph
                                entity: sensor.living_room_temperature
                                variables:
                                  ulm_card_graph_color: "var(--google-yellow)"
                                  ulm_card_graph_name: Temperature
                                  ulm_card_graph_entity: sensor.living_room_temperature
                                  ulm_card_graph_type: fill
                                  ulm_card_graph_hours: 24
                                  ulm_card_graph_group_by: interval
                              - type: "custom:button-card"
                                template: card_graph
                                entity: sensor.living_room_humidity
                                variables:
                                  ulm_card_graph_color: "var(--google-violet)"
                                  ulm_card_graph_name: Humidity
                                  ulm_card_graph_entity: sensor.living_room_humidity
                                  ulm_card_graph_type: fill
                                  ulm_card_graph_hours: 24
                                  ulm_card_graph_group_by: interval
                              - type: "custom:button-card"
                                template: card_graph
                                entity: sensor.living_room_air_pressure
                                variables:
                                  ulm_card_graph_color: "var(--google-green)"
                                  ulm_card_graph_name: Air Pressure
                                  ulm_card_graph_entity: sensor.living_room_air_pressure
                                  ulm_card_graph_type: fill
                                  ulm_card_graph_hours: 24
                                  ulm_card_graph_group_by: interval
                          - type: vertical-stack
                            cards:
                              - type: "custom:button-card"
                                template: "card_title"
                                name: "Kitchen"
                              - type: "custom:button-card"
                                template: card_graph
                                entity: sensor.kitchen_temperature
                                variables:
                                  ulm_card_graph_color: "var(--google-yellow)"
                                  ulm_card_graph_name: Temperature
                                  ulm_card_graph_entity: sensor.kitchen_temperature
                                  ulm_card_graph_type: fill
                                  ulm_card_graph_hours: 24
                                  ulm_card_graph_group_by: interval
                              - type: "custom:button-card"
                                template: card_graph
                                entity: sensor.kitchen_humidity
                                variables:
                                  ulm_card_graph_color: "var(--google-violet)"
                                  ulm_card_graph_name: Humidity
                                  ulm_card_graph_entity: sensor.kitchen_humidity
                                  ulm_card_graph_type: fill
                                  ulm_card_graph_hours: 24
                                  ulm_card_graph_group_by: interval
                              - type: "custom:button-card"
                                template: card_graph
                                entity: sensor.kitchen_air_pressure
                                variables:
                                  ulm_card_graph_color: "var(--google-green)"
                                  ulm_card_graph_name: Air Pressure
                                  ulm_card_graph_entity: sensor.kitchen_air_pressure
                                  ulm_card_graph_type: fill
                                  ulm_card_graph_hours: 24
                                  ulm_card_graph_group_by: interval
                          - type: vertical-stack
                            cards:
                              - type: "custom:button-card"
                                template: "card_title"
                                name: "Bedroom"
                              - type: "custom:button-card"
                                template: card_graph
                                entity: sensor.bedroom_temperature
                                variables:
                                  ulm_card_graph_color: "var(--google-yellow)"
                                  ulm_card_graph_name: Temperature
                                  ulm_card_graph_entity: sensor.bedroom_temperature
                                  ulm_card_graph_type: fill
                                  ulm_card_graph_hours: 24
                                  ulm_card_graph_group_by: interval
                              - type: "custom:button-card"
                                template: card_graph
                                entity: sensor.bedroom_humidity
                                variables:
                                  ulm_card_graph_color: "var(--google-violet)"
                                  ulm_card_graph_name: Humidity
                                  ulm_card_graph_entity: sensor.bedroom_humidity
                                  ulm_card_graph_type: fill
                                  ulm_card_graph_hours: 24
                                  ulm_card_graph_group_by: interval
                              - type: "custom:button-card"
                                template: card_graph
                                entity: sensor.bedroom_air_pressure
                                variables:
                                  ulm_card_graph_color: "var(--google-green)"
                                  ulm_card_graph_name: Air Pressure
                                  ulm_card_graph_entity: sensor.bedroom_air_pressure
                                  ulm_card_graph_type: fill
                                  ulm_card_graph_hours: 24
                                  ulm_card_graph_group_by: interval
                          - type: vertical-stack
                            cards:
                              - type: "custom:button-card"
                                template: "card_title"
                                name: "Bathroom"
                              - type: "custom:button-card"
                                template: card_graph
                                entity: sensor.bathroom_temperature
                                variables:
                                  ulm_card_graph_color: "var(--google-yellow)"
                                  ulm_card_graph_name: Temperature
                                  ulm_card_graph_entity: sensor.bathroom_temperature
                                  ulm_card_graph_type: fill
                                  ulm_card_graph_hours: 24
                                  ulm_card_graph_group_by: interval
                              - type: "custom:button-card"
                                template: card_graph
                                entity: sensor.bathroom_humidity
                                variables:
                                  ulm_card_graph_color: "var(--google-violet)"
                                  ulm_card_graph_name: Humidity
                                  ulm_card_graph_entity: sensor.bathroom_humidity
                                  ulm_card_graph_type: fill
                                  ulm_card_graph_hours: 24
                                  ulm_card_graph_group_by: interval
                              - type: "custom:button-card"
                                template: card_graph
                                entity: sensor.bathroom_air_pressure
                                variables:
                                  ulm_card_graph_color: "var(--google-green)"
                                  ulm_card_graph_name: Air Pressure
                                  ulm_card_graph_entity: sensor.bathroom_air_pressure
                                  ulm_card_graph_type: fill
                                  ulm_card_graph_hours: 24
                                  ulm_card_graph_group_by: interval
                          - type: vertical-stack
                            cards:
                              - type: "custom:button-card"
                                template: "card_title"
                                name: "Bedroom"
                              - type: "custom:button-card"
                                template: card_graph
                                entity: sensor.living_room_temperature
                                variables:
                                  ulm_card_graph_color: "var(--google-yellow)"
                                  ulm_card_graph_name: Temperature
                                  ulm_card_graph_entity: sensor.living_room_temperature
                                  ulm_card_graph_type: fill
                                  ulm_card_graph_hours: 24
                                  ulm_card_graph_group_by: interval
                              - type: "custom:button-card"
                                template: card_graph
                                entity: sensor.living_room_humidity
                                variables:
                                  ulm_card_graph_color: "var(--google-violet)"
                                  ulm_card_graph_name: Humidity
                                  ulm_card_graph_entity: sensor.living_room_humidity
                                  ulm_card_graph_type: fill
                                  ulm_card_graph_hours: 24
                                  ulm_card_graph_group_by: interval
                              - type: "custom:button-card"
                                template: card_graph
                                entity: sensor.living_room_air_pressure
                                variables:
                                  ulm_card_graph_color: "var(--google-green)"
                                  ulm_card_graph_name: Air Pressure
                                  ulm_card_graph_entity: sensor.living_room_air_pressure
                                  ulm_card_graph_type: fill
                                  ulm_card_graph_hours: 24
                                  ulm_card_graph_group_by: interval
          - type: 'custom:button-card'
            template: chip_alarm
            entity: alarm_control_panel.home_alarm
            states:
              - arm_away
    item3:
      card:
        type: "custom:button-card"
        tap_action:
          action: "navigate"
          navigation_path: "/config/dashboard"
        template: "chip_mdi_icon_only"
        variables:
          ulm_chip_mdi_icon_only_icon: "mdi:cog-outline"
        styles:
          card:
            - align-self: "end"
            - box-shadow: >
                [[[
                  if (hass.themes.darkMode){
                    return "0px 2px 4px 0px rgba(0,0,0,0.80)";
                  } else {
                    return "var(--box-shadow)";
                  }
                ]]]
