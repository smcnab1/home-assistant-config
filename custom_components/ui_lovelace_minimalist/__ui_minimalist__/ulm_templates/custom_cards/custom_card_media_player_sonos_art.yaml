---
card_media_player_sonos:
  size: "20px"
  show_icon: true
  show_entity_picture: false
  show_state: false
  show_name: true
  variables:
    ulm_card_media_player_icon: false  
  template:
    - "green_playing"
    - "icon_info_bg"
    - "ulm_language_variables"
  label: |
    [[[
        if (entity.state == 'idle'){
          return variables.ulm_off;
        }
        if (entity.state == 'paused'){
          return variables.ulm_paused;
        }
        if (entity.state == 'unavailable'){
          return variables.ulm_unavailable;
        } else {
        return (entity.attributes.source ? entity.attributes.source : variables.ulm_playing)
            + ' â€¢ ' +  ( Math.round(entity.attributes.volume_level / 0.01)) + '%' ;
        }
    ]]]
  icon: |
    [[[
        var icon =  entity.attributes.icon || "mdi:speaker";
        if(entity.attributes.app_name){
          var app = entity.attributes.app_name.toLowerCase();
          if(app == "spotify"){
            var icon = "mdi:spotify";
          } else if(app == "google podcasts"){
            var icon = "mdi:google-podcast";
          } else if(app == "plex"){
            var icon = "mdi:plex";
          } else if(app == "soundcloud"){
            var icon = "mdi:soundcloud";
          } else if(app == "youtube music"){
            var icon = "mdi:youtube";
          } else if (app == "oto music"){
            var icon = "mdi:music-circle";
          } else if(app == "pandora"){
            var icon = "mdi:pandora";
          } else if(app == "netflix"){
            var icon = "mdi:netflix";
          } else if(app == "bluetooth audio"){
            var icon = "mdi:bluetooth";
          }
        }
        return variables.ulm_card_media_player_icon || icon;
    ]]]

card_media_player_sonos_art:
  size: "20px"
  show_icon: true
  show_entity_picture: true
  show_state: false
  show_name: true
  template:
    - "icon_info_bg"
    - "ulm_language_variables"
  variables:
    - ulm_card_sonos_use_entity_picture: "false"
  styles:
    icon:
      - place-self: >
          [[[
            if (variables.ulm_card_sonos_use_entity_picture !== true){
              return "center";
            } else {
              return "stretch stretch";
            }
          ]]]
    entity_picture:
      - height: 54x
      - width: 54px
  icon: "mdi:play"
  entity: "[[[ return variables.ulm_card_media_player_with_controls_entity ]]]"
  name: "[[[ return states[entity.entity_id].attributes.media_title; ]]]"
  label: "[[[ return states[entity.entity_id].attributes.media_artist; ]]]"

card_media_player_sonos_with_controls_art:
  variables:
    ulm_card_media_player_with_controls_name: "No name set"
  triggers_update:
    - "[[[ ulm_card_media_player_with_controls_entity ]]]"
  styles:
    grid:
      - grid-template-areas: "'item1' 'item2'"
      - grid-template-columns: "1fr"
      - grid-template-rows: "min-content  min-content"
      - row-gap: "12px"
    card:
      - border-radius: "var(--border-radius)"
      - box-shadow: "var(--box-shadow)"
      - padding: "12px"
  custom_fields:
    item1:
      card:
        type: "custom:button-card"
        template: "list_2_items"
        custom_fields:
          item1:
            card:
              type: "custom:button-card"
              template:
                - "ulm_language_variables"
                - "card_media_player_sonos"
              tap_action:
                action: "more-info"
              entity: "[[[ return variables.ulm_card_media_player_with_controls_entity ]]]"
              name: "[[[ return variables.ulm_card_media_player_with_controls_name ]]]"
              icon: "[[[ return variables.ulm_card_media_player_icon ]]]"
              styles:
                card:
                  - box-shadow: "none"
                  - padding: "0px"
          item2:
            card:
              type: "custom:button-card"
              template:
                - "ulm_language_variables"
                - "card_media_player_sonos_art"
              tap_action:
                action: "more-info"
              entity: "[[[ return variables.ulm_card_media_player_with_controls_entity ]]]"
              styles:
                card:
                  - box-shadow: "none"
                  - padding: "0px"

    item2:
      card:
        type: "custom:button-card"
        template: "list_items"
        custom_fields:
          item1:
            card:
              type: "custom:button-card"
              template: "widget_icon"
              tap_action:
                action: "call-service"
                service: "media_player.volume_down"
                service_data:
                  entity_id: "[[[ return variables.ulm_card_media_player_with_controls_entity ]]]"
              icon: "mdi:volume-minus"
          item2:
            card:
              type: "custom:button-card"
              template: "widget_icon"
              entity: "[[[ return variables.ulm_card_media_player_with_controls_entity ]]]"
              tap_action:
                action: "call-service"
                service: "media_player.media_play_pause"
                service_data:
                  entity_id: "[[[ return variables.ulm_card_media_player_with_controls_entity ]]]"
              icon: "mdi:pause"
              state:
                - value: "paused"
                  icon: "mdi:play"
                - value: "off"
                  icon: "mdi:play"
          item3:
            card:
              type: "custom:button-card"
              template: "widget_icon"
              tap_action:
                action: "call-service"
                service: "media_player.volume_up"
                service_data:
                  entity_id: "[[[ return variables.ulm_card_media_player_with_controls_entity ]]]"
              icon: "mdi:volume-plus"

green_playing:
  state:
    - styles:
        icon:
          - color: "rgba(var(--color-green),1)"
        img_cell:
          - background-color: "rgba(var(--color-green), 0.2)"
      value: "playing"

  entity_picture:
    - height: 54px
    - width: 54px
    - border-radius: 100%