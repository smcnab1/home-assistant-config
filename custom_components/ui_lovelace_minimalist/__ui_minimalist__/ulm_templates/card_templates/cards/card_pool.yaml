---
card_pool:
#  templates:
#    - "ulm_language_variables"
  variables:
    ulm_card_input_number_name: "n/a"
    ulm_card_switch_name: "n/a"
    timer_entity: "n/a"
    start_entity: "n/a"
    finish_entity: "n/a"
  triggers_update: "all"
  show_icon: false
  show_name: false
  show_label: false
  styles:
    grid:
      - grid-template-areas: '"item1" "item2" "item3"'
      - grid-template-columns: "1fr"
      - grid-template-rows: "min-content  min-content min-content"
      - row-gap: "12px"
    card:
      - border-radius: "var(--border-radius)"
      - box-shadow: "var(--box-shadow)"
      - padding: "12px"
      - background-color: >
          [[[
            if(hass.themes.darkMode)
              if( entity.state === 'on' ){
                return 'rgba(var(--color-blue),0.1)'
              }
          ]]]
  custom_fields:
    item1:
      card:
        type: "custom:button-card"
        template:
          - "icon_info"
          - "ulm_language_variables"
          - "pool"
        tap_action:
          action: "toggle"
        entity: "[[[ return entity.entity_id ]]]"
        name: "[[[ return variables.ulm_card_switch_name ]]]"
        styles:
          card:
            - background-color: "rgba(0,0,0,0)"         
#          icon:
#            - color: >
#                [[[
#                  if( entity.state === 'on' ){
#                    return 'rgba(var(--color-blue),1)'
#                  }
#                ]]]
#          img_cell:
#            - background-color: >
#                [[[
#                  if( entity.state === 'on' ){
#                    return 'rgba(var(--color-blue),0.2)'
#                  } else {
#                  return 'rgba(var(--color-theme),0.05)'
#                  }
#                ]]]
#         label:
#            - color: "rgba(var(--color-blue-text),1)"
#          name:
#            - color: "rgba(var(--color-blue-text),1)"
    item2:
      card:
        type: "custom:button-card"
        template: "list_3_items"
        styles:
          card:
            - background-color: "rgba(0,0,0,0)"
        custom_fields:
          item1:
            card:
              type: "custom:button-card"
              template: "widget_icon"
              tap_action:
                action: "call-service"
                service: "input_number.decrement"
                service_data:
                  entity_id: "[[[ return variables.ulm_card_input_number_entity ]]]"
              icon: "mdi:arrow-down"
          item2:
            card:
              type: "custom:button-card"
              template: "widget_text"
              entity: "[[[ return variables.ulm_card_input_number_entity ]]]"
              tap_action:
                action: "call-service"
                service: "cover.stop_cover"
                service_data:
                  entity_id: "[[[ return variables.ulm_card_input_number_entity ]]]"
          item3:
            card:
              type: "custom:button-card"
              template: "widget_icon"
              tap_action:
                action: "call-service"
                service: "input_number.increment"
                service_data:
                  entity_id: "[[[ return variables.ulm_card_input_number_entity ]]]"
              icon: "mdi:arrow-up"

    item3:
      card:
        type: "custom:button-card"
        template: "list_two_third_items"
        styles:
          card:
            - background-color: "rgba(0,0,0,0)"
        custom_fields:
          item1:
            card:
              type: "custom:button-card"
              template: "widget_icon"
              tap_action:
                action: "toggle"
              haptic: "success"
              entity: "[[[ return variables.timer_entity ]]]"
              icon: "mdi:timer-off-outline"
              state:
                - value: "on"
                  styles:
                    icon:
                      - color: "rgba(var(--color-red),1)"
                - value: "off"
                  styles:
                    icon:
                      - color: "rgba(var(--color-theme),0.2)"           
          item2:
            card:
              type: "custom:button-card"
              template: "widget_text_only_combined"
              variables:
                start_entity_x: "[[[ return variables.start_entity ]]]"
                finish_entity_x: "[[[ return variables.finish_entity ]]]"
                start_entity_x: "[[[ return variables.start_entity ]]]"
                timer_entity_x: "[[[ return variables.timer_entity ]]]"
              entity: "[[[ return variables.start_entity ]]]"
              tap_action:
                action: "none"
pool:
  label: >-
    [[[
      if (entity.state == 'on') {
        return variables.ulm_on;
      } else if (entity.state == 'off') {
        return variables.ulm_off;
      } else if (entity.state == 'unavailable') {
        return variables.ulm_unavailable;
      } else {
        return entity.state;
      }
    ]]]
  state:
    - value: "on"
      styles:
        icon:
          - color: "rgba(var(--color-blue),1)"
        img_cell:
          - background-color: "rgba(var(--color-blue),0.2)"
        label:
          - color: "rgba(var(--color-blue-text),1)"
        name:
          - color: "rgba(var(--color-blue-text),1)"
    - value: "off"
      styles:
        icon:
          - color: "rgba(var(--color-theme),0.2)"
input_number:
  tap_action:
    action: "more-info"
  show_last_changed: true

widget_text:
  tap_action:
    action: "toggle"
  show_icon: false
  show_label: true
  show_name: false
  label: >-
    [[[
      var unit = entity.attributes.unit_of_measurement != null ? ' ' + entity.attributes.unit_of_measurement : ''
      if (entity.state == 'on') {
        return variables.ulm_on;
      } else if (entity.state == 'off') {
        return variables.ulm_off;
      } else if (entity.state == 'unavailable') {
        return variables.ulm_unavailable;
      } else if (entity.state == 'idle') {
        return variables.ulm_idle;
      } else if (entity.state == 'open') {
        return variables.ulm_open;
      } else if (entity.state == 'closed') {
        return variables.ulm_closed;
      } else {
        return entity.state + unit;
      }
    ]]]
  styles:
    grid:
      - grid-template-areas: "'l'"
    card:
      - box-shadow: "none"
      - padding: "0px"
      - background-color: "rgba(var(--color-theme),0.05)"
      - border-radius: "14px"
      - place-self: "center"
      - height: "42px"
#    state:
#      - color: "rgba(var(--color-theme),0.9)"
  size: "20px"
#  color: "var(--google-grey)"

widget_text_icon:
  tap_action:
    action: "toggle"
  show_icon: true
  show_label: true
  show_name: false
  label: >-
    [[[
      var unit = entity.attributes.unit_of_measurement != null ? ' ' + entity.attributes.unit_of_measurement : ''
      if (entity.state == 'on') {
        return variables.ulm_on;
      } else if (entity.state == 'off') {
        return variables.ulm_off;
      } else if (entity.state == 'unavailable') {
        return variables.ulm_unavailable;
      } else if (entity.state == 'idle') {
        return variables.ulm_idle;
      } else if (entity.state == 'open') {
        return variables.ulm_open;
      } else if (entity.state == 'closed') {
        return variables.ulm_closed;
      } else {
        return entity.state + unit;
      }
    ]]]
  styles:
    grid:
      - grid-template-areas: "'l'"
    card:
      - box-shadow: "none"
      - padding: "0px"
      - background-color: "rgba(var(--color-theme),0.05)"
      - border-radius: "14px"
      - place-self: "center"
      - height: "42px"
    label:
      - font-size: "12px"
#    state:
#      - color: "rgba(var(--color-theme),0.9)"
  size: "20px"
#  color: "var(--google-grey)"

widget_text_only:
  show_icon: false
  show_label: true
  show_name: false
  label: "[[[ return entity.state ]]]"
  styles:
    grid:
      - grid-template-areas: "'l'"
    card:
      - box-shadow: "none"
      - padding: "0px"
      - background-color: "rgba(var(--color-theme),0.05)"
      - border-radius: "14px"
      - place-self: "center"
      - height: "42px"
    label:
      - font-size: "8px"
#    state:
#      - color: "rgba(var(--color-theme),0.9)"
  size: "20px"
#  color: "var(--google-grey)"

widget_text_only_combined:
  variables:
    start_entity_x: ""
    finish_entity_x: ""
    timer_entity_x: ""
  triggers_update: "all"
  show_icon: false
  show_label: true
  show_name: false
  label: |
    [[[
      if(states[variables.timer_entity_x].state == 'on'){
        return "---";
      } else {
        var state1 = "";
        if (states[variables.start_entity_x].state){
          var state1 = states[variables.start_entity_x].state;
        }
        var state2 = "";
        if (states[variables.finish_entity_x].state){
          var state2 = states[variables.finish_entity_x].state;
        }
        return state1 + " â†’ " + state2;
      }
    ]]]
  styles:
    grid:
      - grid-template-areas: "'l'"
    card:
      - box-shadow: "none"
      - padding: "0px"
      - background-color: "rgba(var(--color-theme),0.05)"
      - border-radius: "14px"
      - place-self: "center"
      - height: "42px"
    label:
      - font-size: "14px"
#    state:
#      - color: "rgba(var(--color-theme),0.9)"
  size: "20px"
#  color: "var(--google-grey)"

card_pool_alternate:
  variables:
    ulm_card_input_number_name: "n/a"
    ulm_card_switch_name: "n/a"
    ulm_card_switch_entity: "n/a"
    timer_entity: "n/a"
    start_entity: "n/a"
    finish_entity: "n/a"
  triggers_update: "all"
  entity: "[[[ return variables.ulm_card_switch_entity ]]]"
  styles:
    grid:
      - grid-template-areas: '"item1" "item2" "item3"'
      - grid-template-columns: "1fr"
      - grid-template-rows: "min-content  min-content min-content"
      - row-gap: "12px"
    card:
      - border-radius: "var(--border-radius)"
      - box-shadow: "var(--box-shadow)"
      - padding: "12px"
  custom_fields:
    item1:
      card:
        type: "custom:button-card"
        template: "list_one_third_items"
        custom_fields:
          item1:
            card:
              type: "custom:button-card"
              template:
                - "icon_info"
                - "ulm_language_variables"
                - "pool"
              tap_action:
                action: "toggle"
              entity: "[[[ return variables.ulm_card_switch_entity ]]]"
              name: "[[[ return variables.ulm_card_switch_name ]]]"
          item2:
            card:
              type: "custom:button-card"
              template: "widget_icon"
              tap_action:
                action: "toggle"
              haptic: "success"
              entity: "[[[ return variables.timer_entity ]]]"
              icon: "mdi:timer-off-outline"
              state:
                - value: "on"
                  styles:
                    icon:
                      - color: "rgba(var(--color-red),1)"
                - value: "off"
                  styles:
                    icon:
                      - color: "rgba(var(--color-theme),0.2)"              
    item2:
      card:
        type: "custom:button-card"
        template: "list_3_items"
        custom_fields:
          item1:
            card:
              type: "custom:button-card"
              template: "widget_icon"
              tap_action:
                action: "call-service"
                service: "input_number.decrement"
                service_data:
                  entity_id: "[[[ return variables.ulm_card_input_number_entity ]]]"
              icon: "mdi:arrow-down"
          item2:
            card:
              type: "custom:button-card"
              template: "widget_text"
              entity: "[[[ return variables.ulm_card_input_number_entity ]]]"
              tap_action:
                action: "call-service"
                service: "cover.stop_cover"
                service_data:
                  entity_id: "[[[ return variables.ulm_card_input_number_entity ]]]"
          item3:
            card:
              type: "custom:button-card"
              template: "widget_icon"
              tap_action:
                action: "call-service"
                service: "input_number.increment"
                service_data:
                  entity_id: "[[[ return variables.ulm_card_input_number_entity ]]]"
              icon: "mdi:arrow-up"

    item3:
      card:
        type: "custom:button-card"
        template: "list_2_items"
        custom_fields:
          item1:
            card:
              type: "custom:button-card"
              template: "widget_text_icon"
              entity: "[[[ return variables.start_entity ]]]"
              tap_action:
                action: "none"     
          item2:
            card:
              type: "custom:button-card"
              template: "widget_text_icon"
              entity: "[[[ return variables.finish_entity ]]]"
              tap_action:
                action: "none"
