/**
 * @module botframework-connector
 */
import type { ServiceClientCredentials } from '@azure/ms-rest-js';
import { ServiceClientCredentialsFactory } from './serviceClientCredentialsFactory';
/**
 * A simple implementation of the [ServiceClientCredentialsFactory](xref:botframework-connector.ServiceClientCredentialsFactory) interface.
 */
export declare class PasswordServiceClientCredentialFactory implements ServiceClientCredentialsFactory {
    /**
     * The app ID for this credential.
     */
    appId: string | null;
    /**
     * The app password for this credential.
     */
    password: string | null;
    /**
     * The tenant ID of the Azure AD tenant where the bot is created.
     */
    tenantId: string | null;
    private toJSON;
    /**
     * Initializes a new instance of the [PasswordServiceClientCredentialFactory](xref:botframework-connector.PasswordServiceClientCredentialFactory) class.
     *
     * @param appId The app ID.
     * @param password The app password.
     */
    constructor(appId: string, password: string);
    /**
     * Initializes a new instance of the [PasswordServiceClientCredentialFactory](xref:botframework-connector.PasswordServiceClientCredentialFactory) class.
     *
     * @param appId The app ID.
     * @param password The app password.
     * @param tenantId Tenant ID of the Azure AD tenant where the bot is created.
     */
    constructor(appId: string, password: string, tenantId: string);
    isValidAppId(appId?: string): Promise<boolean>;
    isAuthenticationDisabled(): Promise<boolean>;
    createCredentials(appId: string, audience: string, loginEndpoint: string, validateAuthority: boolean): Promise<ServiceClientCredentials>;
}
//# sourceMappingURL=passwordServiceClientCredentialFactory.d.ts.map