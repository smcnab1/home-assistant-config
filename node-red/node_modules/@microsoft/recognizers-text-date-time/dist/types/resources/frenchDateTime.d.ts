export declare namespace FrenchDateTime {
    const LangMarker = "Fre";
    const CheckBothBeforeAfter = false;
    const TillRegex = "(?<till>au|et|(jusqu')?[a\u00E0]|avant|--|-|\u2014|\u2014\u2014)";
    const RangeConnectorRegex = "(?<and>de la|au|[a\u00E0]|et(\\s*la)?|--|-|\u2014|\u2014\u2014)";
    const RelativeRegex = "(?<order>prochaine?|de|du|ce(tte)?|l[ae]|derni[e\u00E8]re|pr[e\u00E9]c[e\u00E9]dente|au\\s+cours+(de|du\\s*))";
    const StrictRelativeRegex = "(?<order>prochaine?|derni[e\u00E8]re|pr[e\u00E9]c[e\u00E9]dente|au\\s+cours+(de|du\\s*))";
    const NextSuffixRegex = "(?<order>prochaines?|prochain|suivante)\\b";
    const PastSuffixRegex = "(?<order>derni[e\u00E8]re?|pr[e\u00E9]c[e\u00E9]dente)\\b";
    const ThisPrefixRegex = "(?<order>ce(tte)?|au\\s+cours+(du|de))\\b";
    const RangePrefixRegex = "(du|depuis|des?|entre)";
    const DayRegex = "(?<day>01|02|03|04|05|06|07|08|09|10|11e?|12e?|13e?|14e?|15e?|16e?|17e?|18e?|19e?|1er|1|21e?|20e?|22e?|23e?|24e?|25e?|26e?|27e?|28e?|29e?|2e?|30e?|31e?|3e?|4e?|5e?|6e?|7e?|8e?|9e?)(?=\\b|t)";
    const MonthNumRegex = "(?<month>01|02|03|04|05|06|07|08|09|10|11|12|1|2|3|4|5|6|7|8|9)\\b";
    const SpecialDescRegex = "(p\\b)";
    const AmDescRegex: string;
    const PmDescRegex: string;
    const AmPmDescRegex: string;
    const DescRegex: string;
    const TwoDigitYearRegex: string;
    const FullTextYearRegex = "^[\\*]";
    const YearRegex: string;
    const WeekDayRegex = "(?<weekday>dimanche|lundi|mardi|mercredi|jeudi|vendredi|samedi|lun|mar|mer|jeu|ven|sam|dim)\\b";
    const RelativeMonthRegex: string;
    const WrittenMonthRegex = "(?<month>avril|avr\\.|avr|ao[u\u00FB]t|d[e\u00E9]cembre|d[e\u00E9]c\\.|d[e\u00E9]c|f[e\u00E9]vrier|f[e\u00E9]v|f[e\u00E9]vr\\.|f[e\u00E9]vr|janvier|janv\\.|janv|jan|juillet|jul|juil\\.|juil|juin|jun|mars?|mai|novembre|nov\\.|nov|octobre|oct\\.|oct|septembre|sept\\.|sept|sep)";
    const MonthSuffixRegex: string;
    const DateUnitRegex = "(?<unit>(l')?ann[e\u00E9]es?|an|mois|semaines?|journ[e\u00E9]es?|jours?)\\b";
    const SimpleCasesRegex: string;
    const MonthFrontSimpleCasesRegex: string;
    const MonthFrontBetweenRegex: string;
    const BetweenRegex: string;
    const YearWordRegex = "\\b(?<year>l'ann[\u00E9e]e)\\b";
    const MonthWithYear: string;
    const OneWordPeriodRegex: string;
    const MonthNumWithYear: string;
    const WeekOfMonthRegex: string;
    const WeekOfYearRegex: string;
    const FollowedDateUnit: string;
    const NumberCombinedWithDateUnit: string;
    const QuarterRegex: string;
    const QuarterRegexYearFront: string;
    const AllHalfYearRegex = "^[.]";
    const PrefixDayRegex = "^[.]";
    const CenturySuffixRegex = "^[.]";
    const SeasonRegex: string;
    const WhichWeekRegex = "\\b(semaine)(\\s*)(?<number>5[0-3]|[1-4]\\d|0?[1-9])\\b";
    const WeekOfRegex = "(semaine)(\\s*)(de)";
    const MonthOfRegex = "(mois)(\\s*)(de)";
    const MonthRegex = "(?<month>avril|avr\\.|avr|ao[u\u00FB]t|d[e\u00E9]cembre|d[e\u00E9]c\\.|d[e\u00E9]c|f[e\u00E9]vrier|f[e\u00E9]vr?\\.|f[e\u00E9]vr?|janvier|janv\\.|janv?|juillet|jul|juil\\.|juil|juin|jun|mars?|mai|novembre|nov\\.|nov|octobre|oct\\.|oct|septembre|sept\\.|sept?)";
    const OnRegex: string;
    const RelaxedOnRegex = "(?<=\\b(en|le|dans|sur\\s*l[ea]|du|sur)\\s+)((?<day>10e|11e|12e|13e|14e|15e|16e|17e|18e|19e|1er|20e|21e|22e|23e|24e|25e|26e|27e|28e|29e|2e|30e|31e|3e|4e|5e|6e|7e|8e|9e)s?)\\b";
    const ThisRegex: string;
    const LastDateRegex: string;
    const NextDateRegex: string;
    const SpecialDayRegex = "\\b(avant[\\s|-]hier|apr[e\u00E8]s(-demain|\\s*demain)|(le\\s)?jour suivant|(le\\s+)?dernier jour|hier|lendemain|demain|de la journ[\u00E9e]e|aujourd'hui)\\b";
    const SpecialDayWithNumRegex = "^[.]";
    const StrictWeekDay = "\\b(?<weekday>dim(anche)?|lun(di)?|mar(di)?|mer(credi)?|jeu(di)?|ven(dredi)?|sam(edi)?)s?\\b";
    const SetWeekDayRegex = "\\b(?<prefix>le\\s+)?(?<weekday>matin([\u00E9e]e)?|apres-midi|soir([\u00E9e]e)?|dimanche|lundi|mardi|mercredi|jeudi|vendredi|samedi)s\\b";
    const WeekDayOfMonthRegex: string;
    const RelativeWeekDayRegex = "^[.]";
    const AmbiguousRangeModifierPrefix = "^[.]";
    const NumberEndingPattern = "^[.]";
    const SpecialDate: string;
    const DateYearRegex: string;
    const DateExtractor1: string;
    const DateExtractor2: string;
    const DateExtractor3: string;
    const DateExtractor4: string;
    const DateExtractor5: string;
    const DateExtractor6: string;
    const DateExtractor7: string;
    const DateExtractor8: string;
    const DateExtractor9: string;
    const DateExtractorA: string;
    const OfMonth: string;
    const MonthEnd: string;
    const WeekDayEnd: string;
    const WeekDayStart = "^[\\.]";
    const RangeUnitRegex = "\\b(?<unit>(l')?ann[e\u00E9]e(s)?|mois|semaines?)\\b";
    const HourNumRegex = "\\b(?<hournum>zero|[a\u00E1]\\s+une?|deux|trois|quatre|cinq|six|sept|huit|neuf|onze|douze|treize|quatorze|quinze|dix-six|dix-sept|dix-huit|dix-neuf|vingt|vingt-et-un|vingt-deux|vingt-trois|dix)\\b";
    const MinuteNumRegex = "(?<minnum>un|deux|trois|quatre|cinq|six|sept|huit|neuf|onze|douze|treize|quatorze|quinze|seize|dix-sept|dix-huit|dix-neuf|vingt|trente|quarante|cinquante|dix)";
    const DeltaMinuteNumRegex = "(?<deltaminnum>un|deux|trois|quatre|cinq|six|sept|huit|neuf|onze|douze|treize|quatorze|quinze|seize|dix-sept|dix-huit|dix-neuf|vingt|trente|quarante|cinquante|dix)";
    const OclockRegex = "(?<oclock>heures?|h)";
    const PmRegex = "(?<pm>(dans l'\\s*)?apr[e\u00E8]s(\\s*|-)midi|(du|ce|de|le)\\s*(soir([\u00E9e]e)?)|(dans l[ea]\\s+)?(nuit|soir[e\u00E9]e))";
    const AmRegex = "(?<am>(du|de|ce|(du|de|dans)\\s*l[ea]|le)?\\s*matin[\u00E9e]e|(du|de|ce|dans l[ea]|le)?\\s*matin)";
    const LessThanOneHour: string;
    const WrittenTimeRegex: string;
    const TimePrefix: string;
    const TimeSuffix: string;
    const BasicTime: string;
    const MidnightRegex = "(?<midnight>minuit)";
    const CommonDatePrefixRegex = "^[\\.]";
    const MorningRegex = "(?<morning>matin([\u00E9e]e)?)";
    const AfternoonRegex = "(?<afternoon>(d'|l')?apr[e\u00E8]s(-|\\s*)midi)";
    const MidmorningRegex: string;
    const MiddayRegex = "(?<midday>milieu(\\s*|-)d[eu]\\s*(jour|midi)|apr[e\u00E8]s(-|\\s*)midi)";
    const MidafternoonRegex: string;
    const MidTimeRegex: string;
    const AtRegex: string;
    const IshRegex: string;
    const TimeUnitRegex = "(?<unit>heures?|hrs?|h|minutes?|mins?|secondes?|secs?)\\b";
    const RestrictedTimeUnitRegex = "(?<unit>huere|minute)\\b";
    const ConnectNumRegex: string;
    const FivesRegex = "(?<tens>(quinze|vingt(\\s*|-*(cinq))?|trente(\\s*|-*(cinq))?|quarante(\\s*|-*(cinq))??|cinquante(\\s*|-*(cinq))?|dix|cinq))\\b";
    const PeriodHourNumRegex = "(?<hour>vingt-et-un|vingt-deux|vingt-trois|vingt-quatre|zero|une|deux|trois|quatre|cinq|six|sept|huit|neuf|dix|onze|douze|treize|quatorze|quinze|seize|dix-sept|dix-huit|dix-neuf|vingt)";
    const TimeRegex1: string;
    const TimeRegex2: string;
    const TimeRegex3: string;
    const TimeRegex4: string;
    const TimeRegex5: string;
    const TimeRegex6: string;
    const TimeRegex7: string;
    const TimeRegex8: string;
    const TimeRegex9: string;
    const TimeRegex10: string;
    const HourRegex: string;
    const PeriodDescRegex = "(?<desc>pm|am|p\\.m\\.|a\\.m\\.|p)";
    const PeriodPmRegex = "(?<pm>dans l'apr[e\u00E8]s-midi|ce soir|d[eu] soir|dans l[ea] soir[e\u00E9]e|dans la nuit|d[eu] soir[\u00E9e]e)s?";
    const PeriodAmRegex = "(?<am>d[eu] matin|matin([\u00E9e]e)s?";
    const PureNumFromTo: string;
    const PureNumBetweenAnd: string;
    const SpecificTimeFromTo = "^[.]";
    const SpecificTimeBetweenAnd = "^[.]";
    const PrepositionRegex = "(?<prep>^([a\u00E0](\\s+?la)?|en|sur(\\s*l[ea])?|de)$)";
    const TimeOfDayRegex = "\\b(?<timeOfDay>((((dans\\s+(l[ea])?\\s+)?((?<early>d[e\u00E9]but(\\s+|-)|t[o\u00F4]t(\\s+|-)(l[ea]\\s*)?)|(?<late>fin\\s*|fin de(\\s+(la)?)|tard\\s*))?(matin([\u00E9e]e)?|((d|l)?'?)apr[e\u00E8]s[-|\\s*]midi|nuit|soir([e\u00E9]e)?)))|(((\\s+(l[ea])?\\s+)?)jour(n[e\u00E9]e)?))s?)\\b";
    const SpecificTimeOfDayRegex: string;
    const TimeFollowedUnit: string;
    const TimeNumberCombinedWithUnit: string;
    const NowRegex = "\\b(?<now>(ce\\s+)?moment|maintenant|d[e\u00E8]s que possible|dqp|r[e\u00E9]cemment|auparavant)\\b";
    const SuffixRegex = "^\\s*((dans\\s+l[ea]\\s+)|(en\\s+)|(d(u|\\'))?(matin([e\u00E9]e)?|apr[e\u00E8]s-midi|soir[e\u00E9]e|nuit))\\b";
    const DateTimeTimeOfDayRegex = "\\b(?<timeOfDay>matin([e\u00E9]e)?|apr[e\u00E8]s-midi|nuit|soir)\\b";
    const DateTimeSpecificTimeOfDayRegex: string;
    const TimeOfTodayAfterRegex: string;
    const TimeOfTodayBeforeRegex: string;
    const SimpleTimeOfTodayAfterRegex: string;
    const SimpleTimeOfTodayBeforeRegex: string;
    const SpecificEndOfRegex = "(la\\s+)?fin(\\s+de\\s*|\\s*de*l[ea])?\\s*$";
    const UnspecificEndOfRegex = "^[.]";
    const UnspecificEndOfRangeRegex = "^[.]";
    const PeriodTimeOfDayRegex = "\\b((dans\\s+(le)?\\s+)?((?<early>d[e\u00E9]but(\\s+|-|d[ue]|de la)|t[o\u00F4]t)|(?<late>tard\\s*|fin(\\s+|-|d[eu])?))?(?<timeOfDay>matin|((d|l)?'?)apr[e\u00E8]s-midi|nuit|soir([e\u00E9]e)?))\\b";
    const PeriodSpecificTimeOfDayRegex: string;
    const PeriodTimeOfDayWithDateRegex: string;
    const LessThanRegex = "^[.]";
    const MoreThanRegex = "^[.]";
    const DurationUnitRegex = "(?<unit>ann[e\u00E9]es?|ans?|mois|semaines?|jours?|heures?|hrs?|h|minutes?|mins?|secondes?|secs?|journ[e\u00E9]e)\\b";
    const SuffixAndRegex = "(?<suffix>\\s*(et)\\s+(une?\\s+)?(?<suffix_num>demi|quart))";
    const PeriodicRegex = "\\b(?<periodic>quotidien(ne)?|journellement|mensuel(le)?|jours?|hebdomadaire|bihebdomadaire|annuel(lement)?)\\b";
    const EachUnitRegex: string;
    const EachPrefixRegex = "\\b(?<each>(chaque|tous les|(toutes les))\\s*$)";
    const SetEachRegex = "\\b(?<each>(chaque|tous les|(toutes les))\\s*)";
    const SetLastRegex = "(?<last>prochain|dernier|derni[e\u00E8]re|pass[\u00E9e]s|pr[e\u00E9]c[e\u00E9]dent|courant|en\\s*cours)";
    const EachDayRegex = "^\\s*(chaque|tous les)\\s*(jour|jours)\\b";
    const DurationFollowedUnit: string;
    const NumberCombinedWithDurationUnit: string;
    const AnUnitRegex: string;
    const DuringRegex = "^[.]";
    const AllRegex = "\\b(?<all>toute\\s(l['ea])\\s?(?<unit>ann[e\u00E9]e|mois|semaines?|jours?|journ[e\u00E9]e))\\b";
    const HalfRegex = "((une?\\s*)|\\b)(?<half>demi?(\\s*|-)+(?<unit>ann[e\u00E9]e|ans?|mois|semaine|jour|heure))\\b";
    const ConjunctionRegex = "\\b((et(\\s+de|pour)?)|avec)\\b";
    const HolidayRegex1: string;
    const HolidayRegex2: string;
    const HolidayRegex3: string;
    const HolidayRegex4: string;
    const DateTokenPrefix = "le ";
    const TimeTokenPrefix = "\u00E0 ";
    const TokenBeforeDate = "le ";
    const TokenBeforeTime = "\u00E0 ";
    const AMTimeRegex = "(?<am>matin([\u00E9e]e)?)";
    const PMTimeRegex = "\\b(?<pm>(d'|l')?apr[e\u00E8]s-midi|nuit|((\\s*ce|du)\\s+)?soir)\\b";
    const BeforeRegex = "\\b(avant)\\b";
    const BeforeRegex2 = "\\b(entre\\s*(le|la(s)?)?)\\b";
    const AfterRegex = "\\b(apres)\\b";
    const SinceRegex = "\\b(depuis)\\b";
    const AroundRegex = "^[.]";
    const AgoPrefixRegex = "\\b(y a)\\b";
    const LaterRegex = "\\b(plus tard)\\b";
    const AgoRegex = "^[.]";
    const InConnectorRegex = "\\b(dans|en|sur)\\b";
    const SinceYearSuffixRegex = "^[.]";
    const WithinNextPrefixRegex = "^[.]";
    const MorningStartEndRegex = "(^(matin))|((matin)$)";
    const AfternoonStartEndRegex = "(^((d'|l')?apr[e\u00E8]s-midi))|(((d'|l')?apr[e\u00E8]s-midi)$)";
    const EveningStartEndRegex = "(^(soir[\u00E9e]e|soir))|((soir[\u00E9e]e|soir)$)";
    const NightStartEndRegex = "(^(nuit))|((nuit)$)";
    const InexactNumberRegex = "\\b(quel qu[\u00E9e]s|quelqu[\u00E9e]s?|plusieurs?|divers)\\b";
    const InexactNumberUnitRegex: string;
    const RelativeTimeUnitRegex: string;
    const RelativeDurationUnitRegex: string;
    const ReferenceDatePeriodRegex = "^[.]";
    const UpcomingPrefixRegex = ".^";
    const NextPrefixRegex = ".^";
    const PastPrefixRegex = ".^";
    const PreviousPrefixRegex = ".^";
    const RelativeDayRegex = "^[\\.]";
    const ConnectorRegex = "^(,|pour|t|vers)$";
    const ConnectorAndRegex = "\\b(et\\s*(le|las?)?)\\b.+";
    const FromRegex = "((de|du)?)$";
    const FromRegex2 = "((depuis|de)(\\s*las?)?)$";
    const FromToRegex = "\\b(du|depuis|des?).+(au|\u00E0|a)\\b.+";
    const SingleAmbiguousMonthRegex = "^(le\\s+)?(may|march)$";
    const UnspecificDatePeriodRegex = "^[.]";
    const PrepositionSuffixRegex = "\\b(du|de|[\u00E0a]|vers|dans)$";
    const FlexibleDayRegex = "(?<DayOfMonth>([A-Za-z]+\\s)?[A-Za-z\\d]+)";
    const ForTheRegex: string;
    const WeekDayAndDayOfMonthRegex: string;
    const WeekDayAndDayRegex: string;
    const RestOfDateRegex = "\\b(reste|fin)\\s+(d[eu]\\s+)?((le|ce(tte)?)\\s+)?(?<duration>semaine|mois|l'ann[\u00E9e]e)\\b";
    const RestOfDateTimeRegex = "\\b(reste|fin)\\s+(d[eu]\\s+)?((le|ce(tte)?)\\s+)?(?<unit>jour)\\b";
    const LaterEarlyPeriodRegex = "^[.]";
    const WeekWithWeekDayRangeRegex = "^[.]";
    const GeneralEndingRegex = "^[.]";
    const MiddlePauseRegex = "^[.]";
    const DurationConnectorRegex = "^[.]";
    const PrefixArticleRegex = "^[\\.]";
    const OrRegex = "^[.]";
    const YearPlusNumberRegex = "^[.]";
    const NumberAsTimeRegex = "^[.]";
    const TimeBeforeAfterRegex = "^[.]";
    const DateNumberConnectorRegex = "^[.]";
    const CenturyRegex = "^[.]";
    const DecadeRegex = "^[.]";
    const DecadeWithCenturyRegex = "^[.]";
    const RelativeDecadeRegex = "^[.]";
    const YearSuffix: string;
    const SuffixAfterRegex = "^[.]";
    const YearPeriodRegex = "^[.]";
    const FutureSuffixRegex = "^[.]";
    const ComplexDatePeriodRegex = "^[.]";
    const UnitMap: ReadonlyMap<string, string>;
    const UnitValueMap: ReadonlyMap<string, number>;
    const SpecialYearPrefixesMap: ReadonlyMap<string, string>;
    const SeasonMap: ReadonlyMap<string, string>;
    const SeasonValueMap: ReadonlyMap<string, number>;
    const CardinalMap: ReadonlyMap<string, number>;
    const DayOfWeek: ReadonlyMap<string, number>;
    const MonthOfYear: ReadonlyMap<string, number>;
    const Numbers: ReadonlyMap<string, number>;
    const DayOfMonth: ReadonlyMap<string, number>;
    const DoubleNumbers: ReadonlyMap<string, number>;
    const HolidayNames: ReadonlyMap<string, string[]>;
    const NightRegex = "\\b(minuit|nuit)\\b";
    const WrittenDecades: ReadonlyMap<string, number>;
    const SpecialDecadeCases: ReadonlyMap<string, number>;
    const DefaultLanguageFallback = "DMY";
    const DurationDateRestrictions: any[];
    const MorningTermList: string[];
    const AfternoonTermList: string[];
    const EveningTermList: string[];
    const DaytimeTermList: string[];
    const NightTermList: string[];
    const SameDayTerms: string[];
    const PlusOneDayTerms: string[];
    const MinusOneDayTerms: string[];
    const PlusTwoDayTerms: string[];
    const MinusTwoDayTerms: string[];
    const FutureStartTerms: string[];
    const FutureEndTerms: string[];
    const LastCardinalTerms: string[];
    const MonthTerms: string[];
    const MonthToDateTerms: string[];
    const WeekendTerms: string[];
    const WeekTerms: string[];
    const YearTerms: string[];
    const YearToDateTerms: string[];
}
