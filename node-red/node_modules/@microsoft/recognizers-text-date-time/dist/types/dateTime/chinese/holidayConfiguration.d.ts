import { Match, ExtractResult } from "@microsoft/recognizers-text";
import { IHolidayExtractorConfiguration, BaseHolidayParser } from "../baseHoliday";
import { DateTimeResolutionResult } from "../utilities";
import { DateTimeParseResult } from "../parsers";
export declare class ChineseHolidayExtractorConfiguration implements IHolidayExtractorConfiguration {
    readonly holidayRegexes: RegExp[];
    constructor();
}
export declare class ChineseHolidayParser extends BaseHolidayParser {
    private readonly lunarHolidayRegex;
    RegExp: any;
    private readonly integerExtractor;
    private readonly numberParser;
    private readonly fixedHolidayDictionary;
    constructor();
    private static NewYear;
    private static ChsNationalDay;
    private static LaborDay;
    private static ChristmasEve;
    private static ChristmasDay;
    private static LoverDay;
    private static ChsMilBuildDay;
    private static FoolDay;
    private static GirlsDay;
    private static TreePlantDay;
    private static FemaleDay;
    private static ChildrenDay;
    private static YouthDay;
    private static TeacherDay;
    private static SinglesDay;
    private static HalloweenDay;
    private static MidautumnDay;
    private static SpringDay;
    private static NewYearEve;
    private static LanternDay;
    private static QingMingDay;
    private static DragonBoatDay;
    private static ChongYangDay;
    parse(er: ExtractResult, referenceDate?: Date): DateTimeParseResult;
    private isLunar;
    protected match2Date(match: Match, referenceDate: Date): DateTimeResolutionResult;
    private convertYear;
    private getDateValue;
}
