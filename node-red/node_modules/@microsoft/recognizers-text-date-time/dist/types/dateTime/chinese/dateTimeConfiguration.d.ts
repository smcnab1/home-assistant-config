import { ExtractResult } from "@microsoft/recognizers-text";
import { BaseDateTimeExtractor, BaseDateTimeParser } from "../baseDateTime";
import { Token, DateTimeResolutionResult } from "../utilities";
import { DateTimeParseResult } from "../parsers";
export declare class ChineseDateTimeExtractor extends BaseDateTimeExtractor {
    static beforeRegex: RegExp;
    static afterRegex: RegExp;
    static dateTimePeriodUnitRegex: RegExp;
    private readonly durationExtractor;
    constructor(dmyDateFormat: boolean);
    extract(source: string, refDate: Date): ExtractResult[];
    protected mergeDateAndTime(source: string, refDate: Date): Token[];
    private timeOfToday;
    protected durationWithAgoAndLater(source: string, refDate: Date): Token[];
}
export declare class ChineseDateTimeParser extends BaseDateTimeParser {
    private readonly durationExtractor;
    private readonly integerExtractor;
    constructor(dmyDateFormat: boolean);
    parse(er: ExtractResult, refTime?: Date): DateTimeParseResult;
    protected mergeDateAndTime(text: string, referenceTime: Date): DateTimeResolutionResult;
    protected parseTimeOfToday(text: string, referenceTime: Date): DateTimeResolutionResult;
    protected parserDurationWithAgoAndLater(source: string, referenceDate: Date): DateTimeResolutionResult;
    private parseChineseWrittenNumberToValue;
}
